# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/container_v1/proto/cluster_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='google/cloud/container_v1/proto/cluster_service.proto',
  package='google.container.v1',
  syntax='proto3',
  serialized_pb=_b('\n5google/cloud/container_v1/proto/cluster_service.proto\x12\x13google.container.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xed\x03\n\nNodeConfig\x12\x14\n\x0cmachine_type\x18\x01 \x01(\t\x12\x14\n\x0c\x64isk_size_gb\x18\x02 \x01(\x05\x12\x14\n\x0coauth_scopes\x18\x03 \x03(\t\x12\x17\n\x0fservice_account\x18\t \x01(\t\x12?\n\x08metadata\x18\x04 \x03(\x0b\x32-.google.container.v1.NodeConfig.MetadataEntry\x12\x12\n\nimage_type\x18\x05 \x01(\t\x12;\n\x06labels\x18\x06 \x03(\x0b\x32+.google.container.v1.NodeConfig.LabelsEntry\x12\x17\n\x0flocal_ssd_count\x18\x07 \x01(\x05\x12\x0c\n\x04tags\x18\x08 \x03(\t\x12\x13\n\x0bpreemptible\x18\n \x01(\x08\x12<\n\x0c\x61\x63\x63\x65lerators\x18\x0b \x03(\x0b\x32&.google.container.v1.AcceleratorConfig\x12\x18\n\x10min_cpu_platform\x18\r \x01(\t\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a-\n\x0bLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\xd1\x01\n\nMasterAuth\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\x12O\n\x19\x63lient_certificate_config\x18\x03 \x01(\x0b\x32,.google.container.v1.ClientCertificateConfig\x12\x1e\n\x16\x63luster_ca_certificate\x18\x64 \x01(\t\x12\x1a\n\x12\x63lient_certificate\x18\x65 \x01(\t\x12\x12\n\nclient_key\x18\x66 \x01(\t\";\n\x17\x43lientCertificateConfig\x12 \n\x18issue_client_certificate\x18\x01 \x01(\x08\"\xb7\x02\n\x0c\x41\x64\x64onsConfig\x12\x43\n\x13http_load_balancing\x18\x01 \x01(\x0b\x32&.google.container.v1.HttpLoadBalancing\x12Q\n\x1ahorizontal_pod_autoscaling\x18\x02 \x01(\x0b\x32-.google.container.v1.HorizontalPodAutoscaling\x12\x46\n\x14kubernetes_dashboard\x18\x03 \x01(\x0b\x32(.google.container.v1.KubernetesDashboard\x12G\n\x15network_policy_config\x18\x04 \x01(\x0b\x32(.google.container.v1.NetworkPolicyConfig\"%\n\x11HttpLoadBalancing\x12\x10\n\x08\x64isabled\x18\x01 \x01(\x08\",\n\x18HorizontalPodAutoscaling\x12\x10\n\x08\x64isabled\x18\x01 \x01(\x08\"\'\n\x13KubernetesDashboard\x12\x10\n\x08\x64isabled\x18\x01 \x01(\x08\"\'\n\x13NetworkPolicyConfig\x12\x10\n\x08\x64isabled\x18\x01 \x01(\x08\"\xbc\x01\n\x1eMasterAuthorizedNetworksConfig\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12R\n\x0b\x63idr_blocks\x18\x02 \x03(\x0b\x32=.google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock\x1a\x35\n\tCidrBlock\x12\x14\n\x0c\x64isplay_name\x18\x01 \x01(\t\x12\x12\n\ncidr_block\x18\x02 \x01(\t\"\x1d\n\nLegacyAbac\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\"\x91\x01\n\rNetworkPolicy\x12=\n\x08provider\x18\x01 \x01(\x0e\x32+.google.container.v1.NetworkPolicy.Provider\x12\x0f\n\x07\x65nabled\x18\x02 \x01(\x08\"0\n\x08Provider\x12\x18\n\x14PROVIDER_UNSPECIFIED\x10\x00\x12\n\n\x06\x43\x41LICO\x10\x01\"\xdd\x02\n\x12IPAllocationPolicy\x12\x16\n\x0euse_ip_aliases\x18\x01 \x01(\x08\x12\x19\n\x11\x63reate_subnetwork\x18\x02 \x01(\x08\x12\x17\n\x0fsubnetwork_name\x18\x03 \x01(\t\x12\x19\n\x11\x63luster_ipv4_cidr\x18\x04 \x01(\t\x12\x16\n\x0enode_ipv4_cidr\x18\x05 \x01(\t\x12\x1a\n\x12services_ipv4_cidr\x18\x06 \x01(\t\x12$\n\x1c\x63luster_secondary_range_name\x18\x07 \x01(\t\x12%\n\x1dservices_secondary_range_name\x18\x08 \x01(\t\x12\x1f\n\x17\x63luster_ipv4_cidr_block\x18\t \x01(\t\x12\x1c\n\x14node_ipv4_cidr_block\x18\n \x01(\t\x12 \n\x18services_ipv4_cidr_block\x18\x0b \x01(\t\"\xaa\x0b\n\x07\x43luster\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x1a\n\x12initial_node_count\x18\x03 \x01(\x05\x12\x34\n\x0bnode_config\x18\x04 \x01(\x0b\x32\x1f.google.container.v1.NodeConfig\x12\x34\n\x0bmaster_auth\x18\x05 \x01(\x0b\x32\x1f.google.container.v1.MasterAuth\x12\x17\n\x0flogging_service\x18\x06 \x01(\t\x12\x1a\n\x12monitoring_service\x18\x07 \x01(\t\x12\x0f\n\x07network\x18\x08 \x01(\t\x12\x19\n\x11\x63luster_ipv4_cidr\x18\t \x01(\t\x12\x38\n\raddons_config\x18\n \x01(\x0b\x32!.google.container.v1.AddonsConfig\x12\x12\n\nsubnetwork\x18\x0b \x01(\t\x12\x31\n\nnode_pools\x18\x0c \x03(\x0b\x32\x1d.google.container.v1.NodePool\x12\x11\n\tlocations\x18\r \x03(\t\x12\x1f\n\x17\x65nable_kubernetes_alpha\x18\x0e \x01(\x08\x12I\n\x0fresource_labels\x18\x0f \x03(\x0b\x32\x30.google.container.v1.Cluster.ResourceLabelsEntry\x12\x19\n\x11label_fingerprint\x18\x10 \x01(\t\x12\x34\n\x0blegacy_abac\x18\x12 \x01(\x0b\x32\x1f.google.container.v1.LegacyAbac\x12:\n\x0enetwork_policy\x18\x13 \x01(\x0b\x32\".google.container.v1.NetworkPolicy\x12\x45\n\x14ip_allocation_policy\x18\x14 \x01(\x0b\x32\'.google.container.v1.IPAllocationPolicy\x12^\n!master_authorized_networks_config\x18\x16 \x01(\x0b\x32\x33.google.container.v1.MasterAuthorizedNetworksConfig\x12\x42\n\x12maintenance_policy\x18\x17 \x01(\x0b\x32&.google.container.v1.MaintenancePolicy\x12\x11\n\tself_link\x18\x64 \x01(\t\x12\x0c\n\x04zone\x18\x65 \x01(\t\x12\x10\n\x08\x65ndpoint\x18\x66 \x01(\t\x12\x1f\n\x17initial_cluster_version\x18g \x01(\t\x12\x1e\n\x16\x63urrent_master_version\x18h \x01(\t\x12\x1c\n\x14\x63urrent_node_version\x18i \x01(\t\x12\x13\n\x0b\x63reate_time\x18j \x01(\t\x12\x33\n\x06status\x18k \x01(\x0e\x32#.google.container.v1.Cluster.Status\x12\x16\n\x0estatus_message\x18l \x01(\t\x12\x1b\n\x13node_ipv4_cidr_size\x18m \x01(\x05\x12\x1a\n\x12services_ipv4_cidr\x18n \x01(\t\x12\x1b\n\x13instance_group_urls\x18o \x03(\t\x12\x1a\n\x12\x63urrent_node_count\x18p \x01(\x05\x12\x13\n\x0b\x65xpire_time\x18q \x01(\t\x1a\x35\n\x13ResourceLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"i\n\x06Status\x12\x16\n\x12STATUS_UNSPECIFIED\x10\x00\x12\x10\n\x0cPROVISIONING\x10\x01\x12\x0b\n\x07RUNNING\x10\x02\x12\x0f\n\x0bRECONCILING\x10\x03\x12\x0c\n\x08STOPPING\x10\x04\x12\t\n\x05\x45RROR\x10\x05\"\xc1\x03\n\rClusterUpdate\x12\x1c\n\x14\x64\x65sired_node_version\x18\x04 \x01(\t\x12\"\n\x1a\x64\x65sired_monitoring_service\x18\x05 \x01(\t\x12@\n\x15\x64\x65sired_addons_config\x18\x06 \x01(\x0b\x32!.google.container.v1.AddonsConfig\x12\x1c\n\x14\x64\x65sired_node_pool_id\x18\x07 \x01(\t\x12\x1a\n\x12\x64\x65sired_image_type\x18\x08 \x01(\t\x12O\n\x1d\x64\x65sired_node_pool_autoscaling\x18\t \x01(\x0b\x32(.google.container.v1.NodePoolAutoscaling\x12\x19\n\x11\x64\x65sired_locations\x18\n \x03(\t\x12\x66\n)desired_master_authorized_networks_config\x18\x0c \x01(\x0b\x32\x33.google.container.v1.MasterAuthorizedNetworksConfig\x12\x1e\n\x16\x64\x65sired_master_version\x18\x64 \x01(\t\"\xe5\x05\n\tOperation\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12;\n\x0eoperation_type\x18\x03 \x01(\x0e\x32#.google.container.v1.Operation.Type\x12\x35\n\x06status\x18\x04 \x01(\x0e\x32%.google.container.v1.Operation.Status\x12\x0e\n\x06\x64\x65tail\x18\x08 \x01(\t\x12\x16\n\x0estatus_message\x18\x05 \x01(\t\x12\x11\n\tself_link\x18\x06 \x01(\t\x12\x13\n\x0btarget_link\x18\x07 \x01(\t\x12\x12\n\nstart_time\x18\n \x01(\t\x12\x10\n\x08\x65nd_time\x18\x0b \x01(\t\"R\n\x06Status\x12\x16\n\x12STATUS_UNSPECIFIED\x10\x00\x12\x0b\n\x07PENDING\x10\x01\x12\x0b\n\x07RUNNING\x10\x02\x12\x08\n\x04\x44ONE\x10\x03\x12\x0c\n\x08\x41\x42ORTING\x10\x04\"\xfd\x02\n\x04Type\x12\x14\n\x10TYPE_UNSPECIFIED\x10\x00\x12\x12\n\x0e\x43REATE_CLUSTER\x10\x01\x12\x12\n\x0e\x44\x45LETE_CLUSTER\x10\x02\x12\x12\n\x0eUPGRADE_MASTER\x10\x03\x12\x11\n\rUPGRADE_NODES\x10\x04\x12\x12\n\x0eREPAIR_CLUSTER\x10\x05\x12\x12\n\x0eUPDATE_CLUSTER\x10\x06\x12\x14\n\x10\x43REATE_NODE_POOL\x10\x07\x12\x14\n\x10\x44\x45LETE_NODE_POOL\x10\x08\x12\x1c\n\x18SET_NODE_POOL_MANAGEMENT\x10\t\x12\x15\n\x11\x41UTO_REPAIR_NODES\x10\n\x12\x16\n\x12\x41UTO_UPGRADE_NODES\x10\x0b\x12\x0e\n\nSET_LABELS\x10\x0c\x12\x13\n\x0fSET_MASTER_AUTH\x10\r\x12\x16\n\x12SET_NODE_POOL_SIZE\x10\x0e\x12\x16\n\x12SET_NETWORK_POLICY\x10\x0f\x12\x1a\n\x16SET_MAINTENANCE_POLICY\x10\x10\"g\n\x14\x43reateClusterRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12-\n\x07\x63luster\x18\x03 \x01(\x0b\x32\x1c.google.container.v1.Cluster\"I\n\x11GetClusterRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\"\x80\x01\n\x14UpdateClusterRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x32\n\x06update\x18\x04 \x01(\x0b\x32\".google.container.v1.ClusterUpdate\"\x8d\x01\n\x15UpdateNodePoolRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x14\n\x0cnode_pool_id\x18\x04 \x01(\t\x12\x14\n\x0cnode_version\x18\x05 \x01(\t\x12\x12\n\nimage_type\x18\x06 \x01(\t\"\xaa\x01\n\x1dSetNodePoolAutoscalingRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x14\n\x0cnode_pool_id\x18\x04 \x01(\t\x12=\n\x0b\x61utoscaling\x18\x05 \x01(\x0b\x32(.google.container.v1.NodePoolAutoscaling\"i\n\x18SetLoggingServiceRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x17\n\x0flogging_service\x18\x04 \x01(\t\"o\n\x1bSetMonitoringServiceRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x1a\n\x12monitoring_service\x18\x04 \x01(\t\"\x88\x01\n\x16SetAddonsConfigRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x38\n\raddons_config\x18\x04 \x01(\x0b\x32!.google.container.v1.AddonsConfig\"^\n\x13SetLocationsRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x11\n\tlocations\x18\x04 \x03(\t\"c\n\x13UpdateMasterRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x16\n\x0emaster_version\x18\x04 \x01(\t\"\x91\x02\n\x14SetMasterAuthRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12@\n\x06\x61\x63tion\x18\x04 \x01(\x0e\x32\x30.google.container.v1.SetMasterAuthRequest.Action\x12/\n\x06update\x18\x05 \x01(\x0b\x32\x1f.google.container.v1.MasterAuth\"P\n\x06\x41\x63tion\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x10\n\x0cSET_PASSWORD\x10\x01\x12\x15\n\x11GENERATE_PASSWORD\x10\x02\x12\x10\n\x0cSET_USERNAME\x10\x03\"L\n\x14\x44\x65leteClusterRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\"7\n\x13ListClustersRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\"]\n\x14ListClustersResponse\x12.\n\x08\x63lusters\x18\x01 \x03(\x0b\x32\x1c.google.container.v1.Cluster\x12\x15\n\rmissing_zones\x18\x02 \x03(\t\"M\n\x13GetOperationRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x14\n\x0coperation_id\x18\x03 \x01(\t\"9\n\x15ListOperationsRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\"P\n\x16\x43\x61ncelOperationRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x14\n\x0coperation_id\x18\x03 \x01(\t\"c\n\x16ListOperationsResponse\x12\x32\n\noperations\x18\x01 \x03(\x0b\x32\x1e.google.container.v1.Operation\x12\x15\n\rmissing_zones\x18\x02 \x03(\t\":\n\x16GetServerConfigRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\"\xa2\x01\n\x0cServerConfig\x12\x1f\n\x17\x64\x65\x66\x61ult_cluster_version\x18\x01 \x01(\t\x12\x1b\n\x13valid_node_versions\x18\x03 \x03(\t\x12\x1a\n\x12\x64\x65\x66\x61ult_image_type\x18\x04 \x01(\t\x12\x19\n\x11valid_image_types\x18\x05 \x03(\t\x12\x1d\n\x15valid_master_versions\x18\x06 \x03(\t\"\x7f\n\x15\x43reateNodePoolRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x30\n\tnode_pool\x18\x04 \x01(\x0b\x32\x1d.google.container.v1.NodePool\"c\n\x15\x44\x65leteNodePoolRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x14\n\x0cnode_pool_id\x18\x04 \x01(\t\"L\n\x14ListNodePoolsRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\"`\n\x12GetNodePoolRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x14\n\x0cnode_pool_id\x18\x04 \x01(\t\"\xf0\x03\n\x08NodePool\x12\x0c\n\x04name\x18\x01 \x01(\t\x12/\n\x06\x63onfig\x18\x02 \x01(\x0b\x32\x1f.google.container.v1.NodeConfig\x12\x1a\n\x12initial_node_count\x18\x03 \x01(\x05\x12\x11\n\tself_link\x18\x64 \x01(\t\x12\x0f\n\x07version\x18\x65 \x01(\t\x12\x1b\n\x13instance_group_urls\x18\x66 \x03(\t\x12\x34\n\x06status\x18g \x01(\x0e\x32$.google.container.v1.NodePool.Status\x12\x16\n\x0estatus_message\x18h \x01(\t\x12=\n\x0b\x61utoscaling\x18\x04 \x01(\x0b\x32(.google.container.v1.NodePoolAutoscaling\x12\x37\n\nmanagement\x18\x05 \x01(\x0b\x32#.google.container.v1.NodeManagement\"\x81\x01\n\x06Status\x12\x16\n\x12STATUS_UNSPECIFIED\x10\x00\x12\x10\n\x0cPROVISIONING\x10\x01\x12\x0b\n\x07RUNNING\x10\x02\x12\x16\n\x12RUNNING_WITH_ERROR\x10\x03\x12\x0f\n\x0bRECONCILING\x10\x04\x12\x0c\n\x08STOPPING\x10\x05\x12\t\n\x05\x45RROR\x10\x06\"}\n\x0eNodeManagement\x12\x14\n\x0c\x61uto_upgrade\x18\x01 \x01(\x08\x12\x13\n\x0b\x61uto_repair\x18\x02 \x01(\x08\x12@\n\x0fupgrade_options\x18\n \x01(\x0b\x32\'.google.container.v1.AutoUpgradeOptions\"J\n\x12\x41utoUpgradeOptions\x12\x1f\n\x17\x61uto_upgrade_start_time\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\"K\n\x11MaintenancePolicy\x12\x36\n\x06window\x18\x01 \x01(\x0b\x32&.google.container.v1.MaintenanceWindow\"n\n\x11MaintenanceWindow\x12O\n\x18\x64\x61ily_maintenance_window\x18\x02 \x01(\x0b\x32+.google.container.v1.DailyMaintenanceWindowH\x00\x42\x08\n\x06policy\">\n\x16\x44\x61ilyMaintenanceWindow\x12\x12\n\nstart_time\x18\x02 \x01(\t\x12\x10\n\x08\x64uration\x18\x03 \x01(\t\"\xa3\x01\n\x1cSetNodePoolManagementRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x14\n\x0cnode_pool_id\x18\x04 \x01(\t\x12\x37\n\nmanagement\x18\x05 \x01(\x0b\x32#.google.container.v1.NodeManagement\"x\n\x16SetNodePoolSizeRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x14\n\x0cnode_pool_id\x18\x04 \x01(\t\x12\x12\n\nnode_count\x18\x05 \x01(\x05\"l\n\x1eRollbackNodePoolUpgradeRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x14\n\x0cnode_pool_id\x18\x04 \x01(\t\"J\n\x15ListNodePoolsResponse\x12\x31\n\nnode_pools\x18\x01 \x03(\x0b\x32\x1d.google.container.v1.NodePool\"V\n\x13NodePoolAutoscaling\x12\x0f\n\x07\x65nabled\x18\x01 \x01(\x08\x12\x16\n\x0emin_node_count\x18\x02 \x01(\x05\x12\x16\n\x0emax_node_count\x18\x03 \x01(\x05\"\xee\x01\n\x10SetLabelsRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12R\n\x0fresource_labels\x18\x04 \x03(\x0b\x32\x39.google.container.v1.SetLabelsRequest.ResourceLabelsEntry\x12\x19\n\x11label_fingerprint\x18\x05 \x01(\t\x1a\x35\n\x13ResourceLabelsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"]\n\x14SetLegacyAbacRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x0f\n\x07\x65nabled\x18\x04 \x01(\x08\"N\n\x16StartIPRotationRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\"Q\n\x19\x43ompleteIPRotationRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\"H\n\x11\x41\x63\x63\x65leratorConfig\x12\x19\n\x11\x61\x63\x63\x65lerator_count\x18\x01 \x01(\x03\x12\x18\n\x10\x61\x63\x63\x65lerator_type\x18\x02 \x01(\t\"\x8b\x01\n\x17SetNetworkPolicyRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12:\n\x0enetwork_policy\x18\x04 \x01(\x0b\x32\".google.container.v1.NetworkPolicy\"\x97\x01\n\x1bSetMaintenancePolicyRequest\x12\x12\n\nproject_id\x18\x01 \x01(\t\x12\x0c\n\x04zone\x18\x02 \x01(\t\x12\x12\n\ncluster_id\x18\x03 \x01(\t\x12\x42\n\x12maintenance_policy\x18\x04 \x01(\x0b\x32&.google.container.v1.MaintenancePolicy2\xe3*\n\x0e\x43lusterManager\x12\x9c\x01\n\x0cListClusters\x12(.google.container.v1.ListClustersRequest\x1a).google.container.v1.ListClustersResponse\"7\x82\xd3\xe4\x93\x02\x31\x12//v1/projects/{project_id}/zones/{zone}/clusters\x12\x98\x01\n\nGetCluster\x12&.google.container.v1.GetClusterRequest\x1a\x1c.google.container.v1.Cluster\"D\x82\xd3\xe4\x93\x02>\x12</v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}\x12\x96\x01\n\rCreateCluster\x12).google.container.v1.CreateClusterRequest\x1a\x1e.google.container.v1.Operation\":\x82\xd3\xe4\x93\x02\x34\"//v1/projects/{project_id}/zones/{zone}/clusters:\x01*\x12\xa3\x01\n\rUpdateCluster\x12).google.container.v1.UpdateClusterRequest\x1a\x1e.google.container.v1.Operation\"G\x82\xd3\xe4\x93\x02\x41\x1a</v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}:\x01*\x12\xc5\x01\n\x0eUpdateNodePool\x12*.google.container.v1.UpdateNodePoolRequest\x1a\x1e.google.container.v1.Operation\"g\x82\xd3\xe4\x93\x02\x61\"\\/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/nodePools/{node_pool_id}/update:\x01*\x12\xda\x01\n\x16SetNodePoolAutoscaling\x12\x32.google.container.v1.SetNodePoolAutoscalingRequest\x1a\x1e.google.container.v1.Operation\"l\x82\xd3\xe4\x93\x02\x66\"a/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/nodePools/{node_pool_id}/autoscaling:\x01*\x12\xb3\x01\n\x11SetLoggingService\x12-.google.container.v1.SetLoggingServiceRequest\x1a\x1e.google.container.v1.Operation\"O\x82\xd3\xe4\x93\x02I\"D/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/logging:\x01*\x12\xbc\x01\n\x14SetMonitoringService\x12\x30.google.container.v1.SetMonitoringServiceRequest\x1a\x1e.google.container.v1.Operation\"R\x82\xd3\xe4\x93\x02L\"G/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/monitoring:\x01*\x12\xae\x01\n\x0fSetAddonsConfig\x12+.google.container.v1.SetAddonsConfigRequest\x1a\x1e.google.container.v1.Operation\"N\x82\xd3\xe4\x93\x02H\"C/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/addons:\x01*\x12\xab\x01\n\x0cSetLocations\x12(.google.container.v1.SetLocationsRequest\x1a\x1e.google.container.v1.Operation\"Q\x82\xd3\xe4\x93\x02K\"F/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/locations:\x01*\x12\xa8\x01\n\x0cUpdateMaster\x12(.google.container.v1.UpdateMasterRequest\x1a\x1e.google.container.v1.Operation\"N\x82\xd3\xe4\x93\x02H\"C/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/master:\x01*\x12\xb1\x01\n\rSetMasterAuth\x12).google.container.v1.SetMasterAuthRequest\x1a\x1e.google.container.v1.Operation\"U\x82\xd3\xe4\x93\x02O\"J/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}:setMasterAuth:\x01*\x12\xa0\x01\n\rDeleteCluster\x12).google.container.v1.DeleteClusterRequest\x1a\x1e.google.container.v1.Operation\"D\x82\xd3\xe4\x93\x02>*</v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}\x12\xa4\x01\n\x0eListOperations\x12*.google.container.v1.ListOperationsRequest\x1a+.google.container.v1.ListOperationsResponse\"9\x82\xd3\xe4\x93\x02\x33\x12\x31/v1/projects/{project_id}/zones/{zone}/operations\x12\xa2\x01\n\x0cGetOperation\x12(.google.container.v1.GetOperationRequest\x1a\x1e.google.container.v1.Operation\"H\x82\xd3\xe4\x93\x02\x42\x12@/v1/projects/{project_id}/zones/{zone}/operations/{operation_id}\x12\xaa\x01\n\x0f\x43\x61ncelOperation\x12+.google.container.v1.CancelOperationRequest\x1a\x16.google.protobuf.Empty\"R\x82\xd3\xe4\x93\x02L\"G/v1/projects/{project_id}/zones/{zone}/operations/{operation_id}:cancel:\x01*\x12\x9e\x01\n\x0fGetServerConfig\x12+.google.container.v1.GetServerConfigRequest\x1a!.google.container.v1.ServerConfig\";\x82\xd3\xe4\x93\x02\x35\x12\x33/v1/projects/{project_id}/zones/{zone}/serverconfig\x12\xb6\x01\n\rListNodePools\x12).google.container.v1.ListNodePoolsRequest\x1a*.google.container.v1.ListNodePoolsResponse\"N\x82\xd3\xe4\x93\x02H\x12\x46/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/nodePools\x12\xb4\x01\n\x0bGetNodePool\x12\'.google.container.v1.GetNodePoolRequest\x1a\x1d.google.container.v1.NodePool\"]\x82\xd3\xe4\x93\x02W\x12U/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/nodePools/{node_pool_id}\x12\xaf\x01\n\x0e\x43reateNodePool\x12*.google.container.v1.CreateNodePoolRequest\x1a\x1e.google.container.v1.Operation\"Q\x82\xd3\xe4\x93\x02K\"F/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/nodePools:\x01*\x12\xbb\x01\n\x0e\x44\x65leteNodePool\x12*.google.container.v1.DeleteNodePoolRequest\x1a\x1e.google.container.v1.Operation\"]\x82\xd3\xe4\x93\x02W*U/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/nodePools/{node_pool_id}\x12\xd9\x01\n\x17RollbackNodePoolUpgrade\x12\x33.google.container.v1.RollbackNodePoolUpgradeRequest\x1a\x1e.google.container.v1.Operation\"i\x82\xd3\xe4\x93\x02\x63\"^/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/nodePools/{node_pool_id}:rollback:\x01*\x12\xda\x01\n\x15SetNodePoolManagement\x12\x31.google.container.v1.SetNodePoolManagementRequest\x1a\x1e.google.container.v1.Operation\"n\x82\xd3\xe4\x93\x02h\"c/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/nodePools/{node_pool_id}/setManagement:\x01*\x12\xaa\x01\n\tSetLabels\x12%.google.container.v1.SetLabelsRequest\x1a\x1e.google.container.v1.Operation\"V\x82\xd3\xe4\x93\x02P\"K/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/resourceLabels:\x01*\x12\xae\x01\n\rSetLegacyAbac\x12).google.container.v1.SetLegacyAbacRequest\x1a\x1e.google.container.v1.Operation\"R\x82\xd3\xe4\x93\x02L\"G/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/legacyAbac:\x01*\x12\xb7\x01\n\x0fStartIPRotation\x12+.google.container.v1.StartIPRotationRequest\x1a\x1e.google.container.v1.Operation\"W\x82\xd3\xe4\x93\x02Q\"L/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}:startIpRotation:\x01*\x12\xc0\x01\n\x12\x43ompleteIPRotation\x12..google.container.v1.CompleteIPRotationRequest\x1a\x1e.google.container.v1.Operation\"Z\x82\xd3\xe4\x93\x02T\"O/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}:completeIpRotation:\x01*\x12\xc8\x01\n\x0fSetNodePoolSize\x12+.google.container.v1.SetNodePoolSizeRequest\x1a\x1e.google.container.v1.Operation\"h\x82\xd3\xe4\x93\x02\x62\"]/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}/nodePools/{node_pool_id}/setSize:\x01*\x12\xba\x01\n\x10SetNetworkPolicy\x12,.google.container.v1.SetNetworkPolicyRequest\x1a\x1e.google.container.v1.Operation\"X\x82\xd3\xe4\x93\x02R\"M/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}:setNetworkPolicy:\x01*\x12\xc6\x01\n\x14SetMaintenancePolicy\x12\x30.google.container.v1.SetMaintenancePolicyRequest\x1a\x1e.google.container.v1.Operation\"\\\x82\xd3\xe4\x93\x02V\"Q/v1/projects/{project_id}/zones/{zone}/clusters/{cluster_id}:setMaintenancePolicy:\x01*B\xa6\x01\n\x17\x63om.google.container.v1B\x13\x43lusterServiceProtoP\x01Z<google.golang.org/genproto/googleapis/container/v1;container\xaa\x02\x19Google.Cloud.Container.V1\xca\x02\x19Google\\Cloud\\Container\\V1b\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_NETWORKPOLICY_PROVIDER = _descriptor.EnumDescriptor(
  name='Provider',
  full_name='google.container.v1.NetworkPolicy.Provider',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='PROVIDER_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CALICO', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1707,
  serialized_end=1755,
)
_sym_db.RegisterEnumDescriptor(_NETWORKPOLICY_PROVIDER)

_CLUSTER_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='google.container.v1.Cluster.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STATUS_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROVISIONING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUNNING', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RECONCILING', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPING', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=3455,
  serialized_end=3560,
)
_sym_db.RegisterEnumDescriptor(_CLUSTER_STATUS)

_OPERATION_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='google.container.v1.Operation.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STATUS_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PENDING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUNNING', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DONE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ABORTING', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=4290,
  serialized_end=4372,
)
_sym_db.RegisterEnumDescriptor(_OPERATION_STATUS)

_OPERATION_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='google.container.v1.Operation.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TYPE_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CREATE_CLUSTER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELETE_CLUSTER', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPGRADE_MASTER', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPGRADE_NODES', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REPAIR_CLUSTER', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPDATE_CLUSTER', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CREATE_NODE_POOL', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELETE_NODE_POOL', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_NODE_POOL_MANAGEMENT', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUTO_REPAIR_NODES', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUTO_UPGRADE_NODES', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_LABELS', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_MASTER_AUTH', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_NODE_POOL_SIZE', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_NETWORK_POLICY', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_MAINTENANCE_POLICY', index=16, number=16,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=4375,
  serialized_end=4756,
)
_sym_db.RegisterEnumDescriptor(_OPERATION_TYPE)

_SETMASTERAUTHREQUEST_ACTION = _descriptor.EnumDescriptor(
  name='Action',
  full_name='google.container.v1.SetMasterAuthRequest.Action',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_PASSWORD', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GENERATE_PASSWORD', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_USERNAME', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=6136,
  serialized_end=6216,
)
_sym_db.RegisterEnumDescriptor(_SETMASTERAUTHREQUEST_ACTION)

_NODEPOOL_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='google.container.v1.NodePool.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STATUS_UNSPECIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROVISIONING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUNNING', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUNNING_WITH_ERROR', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RECONCILING', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STOPPING', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=7768,
  serialized_end=7897,
)
_sym_db.RegisterEnumDescriptor(_NODEPOOL_STATUS)


_NODECONFIG_METADATAENTRY = _descriptor.Descriptor(
  name='MetadataEntry',
  full_name='google.container.v1.NodeConfig.MetadataEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='google.container.v1.NodeConfig.MetadataEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='google.container.v1.NodeConfig.MetadataEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=537,
  serialized_end=584,
)

_NODECONFIG_LABELSENTRY = _descriptor.Descriptor(
  name='LabelsEntry',
  full_name='google.container.v1.NodeConfig.LabelsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='google.container.v1.NodeConfig.LabelsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='google.container.v1.NodeConfig.LabelsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=586,
  serialized_end=631,
)

_NODECONFIG = _descriptor.Descriptor(
  name='NodeConfig',
  full_name='google.container.v1.NodeConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='machine_type', full_name='google.container.v1.NodeConfig.machine_type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='disk_size_gb', full_name='google.container.v1.NodeConfig.disk_size_gb', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='oauth_scopes', full_name='google.container.v1.NodeConfig.oauth_scopes', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='service_account', full_name='google.container.v1.NodeConfig.service_account', index=3,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='google.container.v1.NodeConfig.metadata', index=4,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='image_type', full_name='google.container.v1.NodeConfig.image_type', index=5,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='labels', full_name='google.container.v1.NodeConfig.labels', index=6,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='local_ssd_count', full_name='google.container.v1.NodeConfig.local_ssd_count', index=7,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tags', full_name='google.container.v1.NodeConfig.tags', index=8,
      number=8, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='preemptible', full_name='google.container.v1.NodeConfig.preemptible', index=9,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='accelerators', full_name='google.container.v1.NodeConfig.accelerators', index=10,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_cpu_platform', full_name='google.container.v1.NodeConfig.min_cpu_platform', index=11,
      number=13, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_NODECONFIG_METADATAENTRY, _NODECONFIG_LABELSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=138,
  serialized_end=631,
)


_MASTERAUTH = _descriptor.Descriptor(
  name='MasterAuth',
  full_name='google.container.v1.MasterAuth',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='google.container.v1.MasterAuth.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='google.container.v1.MasterAuth.password', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='client_certificate_config', full_name='google.container.v1.MasterAuth.client_certificate_config', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_ca_certificate', full_name='google.container.v1.MasterAuth.cluster_ca_certificate', index=3,
      number=100, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='client_certificate', full_name='google.container.v1.MasterAuth.client_certificate', index=4,
      number=101, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='client_key', full_name='google.container.v1.MasterAuth.client_key', index=5,
      number=102, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=634,
  serialized_end=843,
)


_CLIENTCERTIFICATECONFIG = _descriptor.Descriptor(
  name='ClientCertificateConfig',
  full_name='google.container.v1.ClientCertificateConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='issue_client_certificate', full_name='google.container.v1.ClientCertificateConfig.issue_client_certificate', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=845,
  serialized_end=904,
)


_ADDONSCONFIG = _descriptor.Descriptor(
  name='AddonsConfig',
  full_name='google.container.v1.AddonsConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='http_load_balancing', full_name='google.container.v1.AddonsConfig.http_load_balancing', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='horizontal_pod_autoscaling', full_name='google.container.v1.AddonsConfig.horizontal_pod_autoscaling', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='kubernetes_dashboard', full_name='google.container.v1.AddonsConfig.kubernetes_dashboard', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='network_policy_config', full_name='google.container.v1.AddonsConfig.network_policy_config', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=907,
  serialized_end=1218,
)


_HTTPLOADBALANCING = _descriptor.Descriptor(
  name='HttpLoadBalancing',
  full_name='google.container.v1.HttpLoadBalancing',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='disabled', full_name='google.container.v1.HttpLoadBalancing.disabled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1220,
  serialized_end=1257,
)


_HORIZONTALPODAUTOSCALING = _descriptor.Descriptor(
  name='HorizontalPodAutoscaling',
  full_name='google.container.v1.HorizontalPodAutoscaling',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='disabled', full_name='google.container.v1.HorizontalPodAutoscaling.disabled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1259,
  serialized_end=1303,
)


_KUBERNETESDASHBOARD = _descriptor.Descriptor(
  name='KubernetesDashboard',
  full_name='google.container.v1.KubernetesDashboard',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='disabled', full_name='google.container.v1.KubernetesDashboard.disabled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1305,
  serialized_end=1344,
)


_NETWORKPOLICYCONFIG = _descriptor.Descriptor(
  name='NetworkPolicyConfig',
  full_name='google.container.v1.NetworkPolicyConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='disabled', full_name='google.container.v1.NetworkPolicyConfig.disabled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1346,
  serialized_end=1385,
)


_MASTERAUTHORIZEDNETWORKSCONFIG_CIDRBLOCK = _descriptor.Descriptor(
  name='CidrBlock',
  full_name='google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='display_name', full_name='google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.display_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cidr_block', full_name='google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock.cidr_block', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1523,
  serialized_end=1576,
)

_MASTERAUTHORIZEDNETWORKSCONFIG = _descriptor.Descriptor(
  name='MasterAuthorizedNetworksConfig',
  full_name='google.container.v1.MasterAuthorizedNetworksConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enabled', full_name='google.container.v1.MasterAuthorizedNetworksConfig.enabled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cidr_blocks', full_name='google.container.v1.MasterAuthorizedNetworksConfig.cidr_blocks', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_MASTERAUTHORIZEDNETWORKSCONFIG_CIDRBLOCK, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1388,
  serialized_end=1576,
)


_LEGACYABAC = _descriptor.Descriptor(
  name='LegacyAbac',
  full_name='google.container.v1.LegacyAbac',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enabled', full_name='google.container.v1.LegacyAbac.enabled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1578,
  serialized_end=1607,
)


_NETWORKPOLICY = _descriptor.Descriptor(
  name='NetworkPolicy',
  full_name='google.container.v1.NetworkPolicy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='provider', full_name='google.container.v1.NetworkPolicy.provider', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='enabled', full_name='google.container.v1.NetworkPolicy.enabled', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _NETWORKPOLICY_PROVIDER,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1610,
  serialized_end=1755,
)


_IPALLOCATIONPOLICY = _descriptor.Descriptor(
  name='IPAllocationPolicy',
  full_name='google.container.v1.IPAllocationPolicy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='use_ip_aliases', full_name='google.container.v1.IPAllocationPolicy.use_ip_aliases', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='create_subnetwork', full_name='google.container.v1.IPAllocationPolicy.create_subnetwork', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subnetwork_name', full_name='google.container.v1.IPAllocationPolicy.subnetwork_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_ipv4_cidr', full_name='google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_ipv4_cidr', full_name='google.container.v1.IPAllocationPolicy.node_ipv4_cidr', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='services_ipv4_cidr', full_name='google.container.v1.IPAllocationPolicy.services_ipv4_cidr', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_secondary_range_name', full_name='google.container.v1.IPAllocationPolicy.cluster_secondary_range_name', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='services_secondary_range_name', full_name='google.container.v1.IPAllocationPolicy.services_secondary_range_name', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_ipv4_cidr_block', full_name='google.container.v1.IPAllocationPolicy.cluster_ipv4_cidr_block', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_ipv4_cidr_block', full_name='google.container.v1.IPAllocationPolicy.node_ipv4_cidr_block', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='services_ipv4_cidr_block', full_name='google.container.v1.IPAllocationPolicy.services_ipv4_cidr_block', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1758,
  serialized_end=2107,
)


_CLUSTER_RESOURCELABELSENTRY = _descriptor.Descriptor(
  name='ResourceLabelsEntry',
  full_name='google.container.v1.Cluster.ResourceLabelsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='google.container.v1.Cluster.ResourceLabelsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='google.container.v1.Cluster.ResourceLabelsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3400,
  serialized_end=3453,
)

_CLUSTER = _descriptor.Descriptor(
  name='Cluster',
  full_name='google.container.v1.Cluster',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.container.v1.Cluster.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='google.container.v1.Cluster.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='initial_node_count', full_name='google.container.v1.Cluster.initial_node_count', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_config', full_name='google.container.v1.Cluster.node_config', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='master_auth', full_name='google.container.v1.Cluster.master_auth', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='logging_service', full_name='google.container.v1.Cluster.logging_service', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='monitoring_service', full_name='google.container.v1.Cluster.monitoring_service', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='network', full_name='google.container.v1.Cluster.network', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_ipv4_cidr', full_name='google.container.v1.Cluster.cluster_ipv4_cidr', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='addons_config', full_name='google.container.v1.Cluster.addons_config', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='subnetwork', full_name='google.container.v1.Cluster.subnetwork', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_pools', full_name='google.container.v1.Cluster.node_pools', index=11,
      number=12, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='locations', full_name='google.container.v1.Cluster.locations', index=12,
      number=13, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='enable_kubernetes_alpha', full_name='google.container.v1.Cluster.enable_kubernetes_alpha', index=13,
      number=14, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='resource_labels', full_name='google.container.v1.Cluster.resource_labels', index=14,
      number=15, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label_fingerprint', full_name='google.container.v1.Cluster.label_fingerprint', index=15,
      number=16, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='legacy_abac', full_name='google.container.v1.Cluster.legacy_abac', index=16,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='network_policy', full_name='google.container.v1.Cluster.network_policy', index=17,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip_allocation_policy', full_name='google.container.v1.Cluster.ip_allocation_policy', index=18,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='master_authorized_networks_config', full_name='google.container.v1.Cluster.master_authorized_networks_config', index=19,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='maintenance_policy', full_name='google.container.v1.Cluster.maintenance_policy', index=20,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='self_link', full_name='google.container.v1.Cluster.self_link', index=21,
      number=100, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.Cluster.zone', index=22,
      number=101, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='endpoint', full_name='google.container.v1.Cluster.endpoint', index=23,
      number=102, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='initial_cluster_version', full_name='google.container.v1.Cluster.initial_cluster_version', index=24,
      number=103, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='current_master_version', full_name='google.container.v1.Cluster.current_master_version', index=25,
      number=104, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='current_node_version', full_name='google.container.v1.Cluster.current_node_version', index=26,
      number=105, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='create_time', full_name='google.container.v1.Cluster.create_time', index=27,
      number=106, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='google.container.v1.Cluster.status', index=28,
      number=107, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status_message', full_name='google.container.v1.Cluster.status_message', index=29,
      number=108, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_ipv4_cidr_size', full_name='google.container.v1.Cluster.node_ipv4_cidr_size', index=30,
      number=109, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='services_ipv4_cidr', full_name='google.container.v1.Cluster.services_ipv4_cidr', index=31,
      number=110, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instance_group_urls', full_name='google.container.v1.Cluster.instance_group_urls', index=32,
      number=111, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='current_node_count', full_name='google.container.v1.Cluster.current_node_count', index=33,
      number=112, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='expire_time', full_name='google.container.v1.Cluster.expire_time', index=34,
      number=113, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CLUSTER_RESOURCELABELSENTRY, ],
  enum_types=[
    _CLUSTER_STATUS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2110,
  serialized_end=3560,
)


_CLUSTERUPDATE = _descriptor.Descriptor(
  name='ClusterUpdate',
  full_name='google.container.v1.ClusterUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='desired_node_version', full_name='google.container.v1.ClusterUpdate.desired_node_version', index=0,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='desired_monitoring_service', full_name='google.container.v1.ClusterUpdate.desired_monitoring_service', index=1,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='desired_addons_config', full_name='google.container.v1.ClusterUpdate.desired_addons_config', index=2,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='desired_node_pool_id', full_name='google.container.v1.ClusterUpdate.desired_node_pool_id', index=3,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='desired_image_type', full_name='google.container.v1.ClusterUpdate.desired_image_type', index=4,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='desired_node_pool_autoscaling', full_name='google.container.v1.ClusterUpdate.desired_node_pool_autoscaling', index=5,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='desired_locations', full_name='google.container.v1.ClusterUpdate.desired_locations', index=6,
      number=10, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='desired_master_authorized_networks_config', full_name='google.container.v1.ClusterUpdate.desired_master_authorized_networks_config', index=7,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='desired_master_version', full_name='google.container.v1.ClusterUpdate.desired_master_version', index=8,
      number=100, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3563,
  serialized_end=4012,
)


_OPERATION = _descriptor.Descriptor(
  name='Operation',
  full_name='google.container.v1.Operation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.container.v1.Operation.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.Operation.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='operation_type', full_name='google.container.v1.Operation.operation_type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='google.container.v1.Operation.status', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='detail', full_name='google.container.v1.Operation.detail', index=4,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status_message', full_name='google.container.v1.Operation.status_message', index=5,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='self_link', full_name='google.container.v1.Operation.self_link', index=6,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='target_link', full_name='google.container.v1.Operation.target_link', index=7,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='google.container.v1.Operation.start_time', index=8,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='google.container.v1.Operation.end_time', index=9,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _OPERATION_STATUS,
    _OPERATION_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4015,
  serialized_end=4756,
)


_CREATECLUSTERREQUEST = _descriptor.Descriptor(
  name='CreateClusterRequest',
  full_name='google.container.v1.CreateClusterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.CreateClusterRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.CreateClusterRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster', full_name='google.container.v1.CreateClusterRequest.cluster', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4758,
  serialized_end=4861,
)


_GETCLUSTERREQUEST = _descriptor.Descriptor(
  name='GetClusterRequest',
  full_name='google.container.v1.GetClusterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.GetClusterRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.GetClusterRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.GetClusterRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4863,
  serialized_end=4936,
)


_UPDATECLUSTERREQUEST = _descriptor.Descriptor(
  name='UpdateClusterRequest',
  full_name='google.container.v1.UpdateClusterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.UpdateClusterRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.UpdateClusterRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.UpdateClusterRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='update', full_name='google.container.v1.UpdateClusterRequest.update', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4939,
  serialized_end=5067,
)


_UPDATENODEPOOLREQUEST = _descriptor.Descriptor(
  name='UpdateNodePoolRequest',
  full_name='google.container.v1.UpdateNodePoolRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.UpdateNodePoolRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.UpdateNodePoolRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.UpdateNodePoolRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_pool_id', full_name='google.container.v1.UpdateNodePoolRequest.node_pool_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_version', full_name='google.container.v1.UpdateNodePoolRequest.node_version', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='image_type', full_name='google.container.v1.UpdateNodePoolRequest.image_type', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5070,
  serialized_end=5211,
)


_SETNODEPOOLAUTOSCALINGREQUEST = _descriptor.Descriptor(
  name='SetNodePoolAutoscalingRequest',
  full_name='google.container.v1.SetNodePoolAutoscalingRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.SetNodePoolAutoscalingRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.SetNodePoolAutoscalingRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.SetNodePoolAutoscalingRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_pool_id', full_name='google.container.v1.SetNodePoolAutoscalingRequest.node_pool_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='autoscaling', full_name='google.container.v1.SetNodePoolAutoscalingRequest.autoscaling', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5214,
  serialized_end=5384,
)


_SETLOGGINGSERVICEREQUEST = _descriptor.Descriptor(
  name='SetLoggingServiceRequest',
  full_name='google.container.v1.SetLoggingServiceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.SetLoggingServiceRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.SetLoggingServiceRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.SetLoggingServiceRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='logging_service', full_name='google.container.v1.SetLoggingServiceRequest.logging_service', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5386,
  serialized_end=5491,
)


_SETMONITORINGSERVICEREQUEST = _descriptor.Descriptor(
  name='SetMonitoringServiceRequest',
  full_name='google.container.v1.SetMonitoringServiceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.SetMonitoringServiceRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.SetMonitoringServiceRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.SetMonitoringServiceRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='monitoring_service', full_name='google.container.v1.SetMonitoringServiceRequest.monitoring_service', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5493,
  serialized_end=5604,
)


_SETADDONSCONFIGREQUEST = _descriptor.Descriptor(
  name='SetAddonsConfigRequest',
  full_name='google.container.v1.SetAddonsConfigRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.SetAddonsConfigRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.SetAddonsConfigRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.SetAddonsConfigRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='addons_config', full_name='google.container.v1.SetAddonsConfigRequest.addons_config', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5607,
  serialized_end=5743,
)


_SETLOCATIONSREQUEST = _descriptor.Descriptor(
  name='SetLocationsRequest',
  full_name='google.container.v1.SetLocationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.SetLocationsRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.SetLocationsRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.SetLocationsRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='locations', full_name='google.container.v1.SetLocationsRequest.locations', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5745,
  serialized_end=5839,
)


_UPDATEMASTERREQUEST = _descriptor.Descriptor(
  name='UpdateMasterRequest',
  full_name='google.container.v1.UpdateMasterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.UpdateMasterRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.UpdateMasterRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.UpdateMasterRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='master_version', full_name='google.container.v1.UpdateMasterRequest.master_version', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5841,
  serialized_end=5940,
)


_SETMASTERAUTHREQUEST = _descriptor.Descriptor(
  name='SetMasterAuthRequest',
  full_name='google.container.v1.SetMasterAuthRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.SetMasterAuthRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.SetMasterAuthRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.SetMasterAuthRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='action', full_name='google.container.v1.SetMasterAuthRequest.action', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='update', full_name='google.container.v1.SetMasterAuthRequest.update', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SETMASTERAUTHREQUEST_ACTION,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5943,
  serialized_end=6216,
)


_DELETECLUSTERREQUEST = _descriptor.Descriptor(
  name='DeleteClusterRequest',
  full_name='google.container.v1.DeleteClusterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.DeleteClusterRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.DeleteClusterRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.DeleteClusterRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6218,
  serialized_end=6294,
)


_LISTCLUSTERSREQUEST = _descriptor.Descriptor(
  name='ListClustersRequest',
  full_name='google.container.v1.ListClustersRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.ListClustersRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.ListClustersRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6296,
  serialized_end=6351,
)


_LISTCLUSTERSRESPONSE = _descriptor.Descriptor(
  name='ListClustersResponse',
  full_name='google.container.v1.ListClustersResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='clusters', full_name='google.container.v1.ListClustersResponse.clusters', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='missing_zones', full_name='google.container.v1.ListClustersResponse.missing_zones', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6353,
  serialized_end=6446,
)


_GETOPERATIONREQUEST = _descriptor.Descriptor(
  name='GetOperationRequest',
  full_name='google.container.v1.GetOperationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.GetOperationRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.GetOperationRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='operation_id', full_name='google.container.v1.GetOperationRequest.operation_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6448,
  serialized_end=6525,
)


_LISTOPERATIONSREQUEST = _descriptor.Descriptor(
  name='ListOperationsRequest',
  full_name='google.container.v1.ListOperationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.ListOperationsRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.ListOperationsRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6527,
  serialized_end=6584,
)


_CANCELOPERATIONREQUEST = _descriptor.Descriptor(
  name='CancelOperationRequest',
  full_name='google.container.v1.CancelOperationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.CancelOperationRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.CancelOperationRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='operation_id', full_name='google.container.v1.CancelOperationRequest.operation_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6586,
  serialized_end=6666,
)


_LISTOPERATIONSRESPONSE = _descriptor.Descriptor(
  name='ListOperationsResponse',
  full_name='google.container.v1.ListOperationsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='operations', full_name='google.container.v1.ListOperationsResponse.operations', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='missing_zones', full_name='google.container.v1.ListOperationsResponse.missing_zones', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6668,
  serialized_end=6767,
)


_GETSERVERCONFIGREQUEST = _descriptor.Descriptor(
  name='GetServerConfigRequest',
  full_name='google.container.v1.GetServerConfigRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.GetServerConfigRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.GetServerConfigRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6769,
  serialized_end=6827,
)


_SERVERCONFIG = _descriptor.Descriptor(
  name='ServerConfig',
  full_name='google.container.v1.ServerConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='default_cluster_version', full_name='google.container.v1.ServerConfig.default_cluster_version', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='valid_node_versions', full_name='google.container.v1.ServerConfig.valid_node_versions', index=1,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='default_image_type', full_name='google.container.v1.ServerConfig.default_image_type', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='valid_image_types', full_name='google.container.v1.ServerConfig.valid_image_types', index=3,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='valid_master_versions', full_name='google.container.v1.ServerConfig.valid_master_versions', index=4,
      number=6, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6830,
  serialized_end=6992,
)


_CREATENODEPOOLREQUEST = _descriptor.Descriptor(
  name='CreateNodePoolRequest',
  full_name='google.container.v1.CreateNodePoolRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.CreateNodePoolRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.CreateNodePoolRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.CreateNodePoolRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_pool', full_name='google.container.v1.CreateNodePoolRequest.node_pool', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6994,
  serialized_end=7121,
)


_DELETENODEPOOLREQUEST = _descriptor.Descriptor(
  name='DeleteNodePoolRequest',
  full_name='google.container.v1.DeleteNodePoolRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.DeleteNodePoolRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.DeleteNodePoolRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.DeleteNodePoolRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_pool_id', full_name='google.container.v1.DeleteNodePoolRequest.node_pool_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7123,
  serialized_end=7222,
)


_LISTNODEPOOLSREQUEST = _descriptor.Descriptor(
  name='ListNodePoolsRequest',
  full_name='google.container.v1.ListNodePoolsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.ListNodePoolsRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.ListNodePoolsRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.ListNodePoolsRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7224,
  serialized_end=7300,
)


_GETNODEPOOLREQUEST = _descriptor.Descriptor(
  name='GetNodePoolRequest',
  full_name='google.container.v1.GetNodePoolRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.GetNodePoolRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.GetNodePoolRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.GetNodePoolRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_pool_id', full_name='google.container.v1.GetNodePoolRequest.node_pool_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7302,
  serialized_end=7398,
)


_NODEPOOL = _descriptor.Descriptor(
  name='NodePool',
  full_name='google.container.v1.NodePool',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.container.v1.NodePool.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='config', full_name='google.container.v1.NodePool.config', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='initial_node_count', full_name='google.container.v1.NodePool.initial_node_count', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='self_link', full_name='google.container.v1.NodePool.self_link', index=3,
      number=100, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='google.container.v1.NodePool.version', index=4,
      number=101, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instance_group_urls', full_name='google.container.v1.NodePool.instance_group_urls', index=5,
      number=102, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='google.container.v1.NodePool.status', index=6,
      number=103, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status_message', full_name='google.container.v1.NodePool.status_message', index=7,
      number=104, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='autoscaling', full_name='google.container.v1.NodePool.autoscaling', index=8,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='management', full_name='google.container.v1.NodePool.management', index=9,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _NODEPOOL_STATUS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7401,
  serialized_end=7897,
)


_NODEMANAGEMENT = _descriptor.Descriptor(
  name='NodeManagement',
  full_name='google.container.v1.NodeManagement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='auto_upgrade', full_name='google.container.v1.NodeManagement.auto_upgrade', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='auto_repair', full_name='google.container.v1.NodeManagement.auto_repair', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='upgrade_options', full_name='google.container.v1.NodeManagement.upgrade_options', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7899,
  serialized_end=8024,
)


_AUTOUPGRADEOPTIONS = _descriptor.Descriptor(
  name='AutoUpgradeOptions',
  full_name='google.container.v1.AutoUpgradeOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='auto_upgrade_start_time', full_name='google.container.v1.AutoUpgradeOptions.auto_upgrade_start_time', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='google.container.v1.AutoUpgradeOptions.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8026,
  serialized_end=8100,
)


_MAINTENANCEPOLICY = _descriptor.Descriptor(
  name='MaintenancePolicy',
  full_name='google.container.v1.MaintenancePolicy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='window', full_name='google.container.v1.MaintenancePolicy.window', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8102,
  serialized_end=8177,
)


_MAINTENANCEWINDOW = _descriptor.Descriptor(
  name='MaintenanceWindow',
  full_name='google.container.v1.MaintenanceWindow',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='daily_maintenance_window', full_name='google.container.v1.MaintenanceWindow.daily_maintenance_window', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='policy', full_name='google.container.v1.MaintenanceWindow.policy',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=8179,
  serialized_end=8289,
)


_DAILYMAINTENANCEWINDOW = _descriptor.Descriptor(
  name='DailyMaintenanceWindow',
  full_name='google.container.v1.DailyMaintenanceWindow',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_time', full_name='google.container.v1.DailyMaintenanceWindow.start_time', index=0,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='duration', full_name='google.container.v1.DailyMaintenanceWindow.duration', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8291,
  serialized_end=8353,
)


_SETNODEPOOLMANAGEMENTREQUEST = _descriptor.Descriptor(
  name='SetNodePoolManagementRequest',
  full_name='google.container.v1.SetNodePoolManagementRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.SetNodePoolManagementRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.SetNodePoolManagementRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.SetNodePoolManagementRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_pool_id', full_name='google.container.v1.SetNodePoolManagementRequest.node_pool_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='management', full_name='google.container.v1.SetNodePoolManagementRequest.management', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8356,
  serialized_end=8519,
)


_SETNODEPOOLSIZEREQUEST = _descriptor.Descriptor(
  name='SetNodePoolSizeRequest',
  full_name='google.container.v1.SetNodePoolSizeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.SetNodePoolSizeRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.SetNodePoolSizeRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.SetNodePoolSizeRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_pool_id', full_name='google.container.v1.SetNodePoolSizeRequest.node_pool_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_count', full_name='google.container.v1.SetNodePoolSizeRequest.node_count', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8521,
  serialized_end=8641,
)


_ROLLBACKNODEPOOLUPGRADEREQUEST = _descriptor.Descriptor(
  name='RollbackNodePoolUpgradeRequest',
  full_name='google.container.v1.RollbackNodePoolUpgradeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.RollbackNodePoolUpgradeRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.RollbackNodePoolUpgradeRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.RollbackNodePoolUpgradeRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node_pool_id', full_name='google.container.v1.RollbackNodePoolUpgradeRequest.node_pool_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8643,
  serialized_end=8751,
)


_LISTNODEPOOLSRESPONSE = _descriptor.Descriptor(
  name='ListNodePoolsResponse',
  full_name='google.container.v1.ListNodePoolsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node_pools', full_name='google.container.v1.ListNodePoolsResponse.node_pools', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8753,
  serialized_end=8827,
)


_NODEPOOLAUTOSCALING = _descriptor.Descriptor(
  name='NodePoolAutoscaling',
  full_name='google.container.v1.NodePoolAutoscaling',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enabled', full_name='google.container.v1.NodePoolAutoscaling.enabled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min_node_count', full_name='google.container.v1.NodePoolAutoscaling.min_node_count', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_node_count', full_name='google.container.v1.NodePoolAutoscaling.max_node_count', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8829,
  serialized_end=8915,
)


_SETLABELSREQUEST_RESOURCELABELSENTRY = _descriptor.Descriptor(
  name='ResourceLabelsEntry',
  full_name='google.container.v1.SetLabelsRequest.ResourceLabelsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='google.container.v1.SetLabelsRequest.ResourceLabelsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='google.container.v1.SetLabelsRequest.ResourceLabelsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3400,
  serialized_end=3453,
)

_SETLABELSREQUEST = _descriptor.Descriptor(
  name='SetLabelsRequest',
  full_name='google.container.v1.SetLabelsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.SetLabelsRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.SetLabelsRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.SetLabelsRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='resource_labels', full_name='google.container.v1.SetLabelsRequest.resource_labels', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='label_fingerprint', full_name='google.container.v1.SetLabelsRequest.label_fingerprint', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SETLABELSREQUEST_RESOURCELABELSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8918,
  serialized_end=9156,
)


_SETLEGACYABACREQUEST = _descriptor.Descriptor(
  name='SetLegacyAbacRequest',
  full_name='google.container.v1.SetLegacyAbacRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.SetLegacyAbacRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.SetLegacyAbacRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.SetLegacyAbacRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='enabled', full_name='google.container.v1.SetLegacyAbacRequest.enabled', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9158,
  serialized_end=9251,
)


_STARTIPROTATIONREQUEST = _descriptor.Descriptor(
  name='StartIPRotationRequest',
  full_name='google.container.v1.StartIPRotationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.StartIPRotationRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.StartIPRotationRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.StartIPRotationRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9253,
  serialized_end=9331,
)


_COMPLETEIPROTATIONREQUEST = _descriptor.Descriptor(
  name='CompleteIPRotationRequest',
  full_name='google.container.v1.CompleteIPRotationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.CompleteIPRotationRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.CompleteIPRotationRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.CompleteIPRotationRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9333,
  serialized_end=9414,
)


_ACCELERATORCONFIG = _descriptor.Descriptor(
  name='AcceleratorConfig',
  full_name='google.container.v1.AcceleratorConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='accelerator_count', full_name='google.container.v1.AcceleratorConfig.accelerator_count', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='accelerator_type', full_name='google.container.v1.AcceleratorConfig.accelerator_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9416,
  serialized_end=9488,
)


_SETNETWORKPOLICYREQUEST = _descriptor.Descriptor(
  name='SetNetworkPolicyRequest',
  full_name='google.container.v1.SetNetworkPolicyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.SetNetworkPolicyRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.SetNetworkPolicyRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.SetNetworkPolicyRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='network_policy', full_name='google.container.v1.SetNetworkPolicyRequest.network_policy', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9491,
  serialized_end=9630,
)


_SETMAINTENANCEPOLICYREQUEST = _descriptor.Descriptor(
  name='SetMaintenancePolicyRequest',
  full_name='google.container.v1.SetMaintenancePolicyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project_id', full_name='google.container.v1.SetMaintenancePolicyRequest.project_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zone', full_name='google.container.v1.SetMaintenancePolicyRequest.zone', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='google.container.v1.SetMaintenancePolicyRequest.cluster_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='maintenance_policy', full_name='google.container.v1.SetMaintenancePolicyRequest.maintenance_policy', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9633,
  serialized_end=9784,
)

_NODECONFIG_METADATAENTRY.containing_type = _NODECONFIG
_NODECONFIG_LABELSENTRY.containing_type = _NODECONFIG
_NODECONFIG.fields_by_name['metadata'].message_type = _NODECONFIG_METADATAENTRY
_NODECONFIG.fields_by_name['labels'].message_type = _NODECONFIG_LABELSENTRY
_NODECONFIG.fields_by_name['accelerators'].message_type = _ACCELERATORCONFIG
_MASTERAUTH.fields_by_name['client_certificate_config'].message_type = _CLIENTCERTIFICATECONFIG
_ADDONSCONFIG.fields_by_name['http_load_balancing'].message_type = _HTTPLOADBALANCING
_ADDONSCONFIG.fields_by_name['horizontal_pod_autoscaling'].message_type = _HORIZONTALPODAUTOSCALING
_ADDONSCONFIG.fields_by_name['kubernetes_dashboard'].message_type = _KUBERNETESDASHBOARD
_ADDONSCONFIG.fields_by_name['network_policy_config'].message_type = _NETWORKPOLICYCONFIG
_MASTERAUTHORIZEDNETWORKSCONFIG_CIDRBLOCK.containing_type = _MASTERAUTHORIZEDNETWORKSCONFIG
_MASTERAUTHORIZEDNETWORKSCONFIG.fields_by_name['cidr_blocks'].message_type = _MASTERAUTHORIZEDNETWORKSCONFIG_CIDRBLOCK
_NETWORKPOLICY.fields_by_name['provider'].enum_type = _NETWORKPOLICY_PROVIDER
_NETWORKPOLICY_PROVIDER.containing_type = _NETWORKPOLICY
_CLUSTER_RESOURCELABELSENTRY.containing_type = _CLUSTER
_CLUSTER.fields_by_name['node_config'].message_type = _NODECONFIG
_CLUSTER.fields_by_name['master_auth'].message_type = _MASTERAUTH
_CLUSTER.fields_by_name['addons_config'].message_type = _ADDONSCONFIG
_CLUSTER.fields_by_name['node_pools'].message_type = _NODEPOOL
_CLUSTER.fields_by_name['resource_labels'].message_type = _CLUSTER_RESOURCELABELSENTRY
_CLUSTER.fields_by_name['legacy_abac'].message_type = _LEGACYABAC
_CLUSTER.fields_by_name['network_policy'].message_type = _NETWORKPOLICY
_CLUSTER.fields_by_name['ip_allocation_policy'].message_type = _IPALLOCATIONPOLICY
_CLUSTER.fields_by_name['master_authorized_networks_config'].message_type = _MASTERAUTHORIZEDNETWORKSCONFIG
_CLUSTER.fields_by_name['maintenance_policy'].message_type = _MAINTENANCEPOLICY
_CLUSTER.fields_by_name['status'].enum_type = _CLUSTER_STATUS
_CLUSTER_STATUS.containing_type = _CLUSTER
_CLUSTERUPDATE.fields_by_name['desired_addons_config'].message_type = _ADDONSCONFIG
_CLUSTERUPDATE.fields_by_name['desired_node_pool_autoscaling'].message_type = _NODEPOOLAUTOSCALING
_CLUSTERUPDATE.fields_by_name['desired_master_authorized_networks_config'].message_type = _MASTERAUTHORIZEDNETWORKSCONFIG
_OPERATION.fields_by_name['operation_type'].enum_type = _OPERATION_TYPE
_OPERATION.fields_by_name['status'].enum_type = _OPERATION_STATUS
_OPERATION_STATUS.containing_type = _OPERATION
_OPERATION_TYPE.containing_type = _OPERATION
_CREATECLUSTERREQUEST.fields_by_name['cluster'].message_type = _CLUSTER
_UPDATECLUSTERREQUEST.fields_by_name['update'].message_type = _CLUSTERUPDATE
_SETNODEPOOLAUTOSCALINGREQUEST.fields_by_name['autoscaling'].message_type = _NODEPOOLAUTOSCALING
_SETADDONSCONFIGREQUEST.fields_by_name['addons_config'].message_type = _ADDONSCONFIG
_SETMASTERAUTHREQUEST.fields_by_name['action'].enum_type = _SETMASTERAUTHREQUEST_ACTION
_SETMASTERAUTHREQUEST.fields_by_name['update'].message_type = _MASTERAUTH
_SETMASTERAUTHREQUEST_ACTION.containing_type = _SETMASTERAUTHREQUEST
_LISTCLUSTERSRESPONSE.fields_by_name['clusters'].message_type = _CLUSTER
_LISTOPERATIONSRESPONSE.fields_by_name['operations'].message_type = _OPERATION
_CREATENODEPOOLREQUEST.fields_by_name['node_pool'].message_type = _NODEPOOL
_NODEPOOL.fields_by_name['config'].message_type = _NODECONFIG
_NODEPOOL.fields_by_name['status'].enum_type = _NODEPOOL_STATUS
_NODEPOOL.fields_by_name['autoscaling'].message_type = _NODEPOOLAUTOSCALING
_NODEPOOL.fields_by_name['management'].message_type = _NODEMANAGEMENT
_NODEPOOL_STATUS.containing_type = _NODEPOOL
_NODEMANAGEMENT.fields_by_name['upgrade_options'].message_type = _AUTOUPGRADEOPTIONS
_MAINTENANCEPOLICY.fields_by_name['window'].message_type = _MAINTENANCEWINDOW
_MAINTENANCEWINDOW.fields_by_name['daily_maintenance_window'].message_type = _DAILYMAINTENANCEWINDOW
_MAINTENANCEWINDOW.oneofs_by_name['policy'].fields.append(
  _MAINTENANCEWINDOW.fields_by_name['daily_maintenance_window'])
_MAINTENANCEWINDOW.fields_by_name['daily_maintenance_window'].containing_oneof = _MAINTENANCEWINDOW.oneofs_by_name['policy']
_SETNODEPOOLMANAGEMENTREQUEST.fields_by_name['management'].message_type = _NODEMANAGEMENT
_LISTNODEPOOLSRESPONSE.fields_by_name['node_pools'].message_type = _NODEPOOL
_SETLABELSREQUEST_RESOURCELABELSENTRY.containing_type = _SETLABELSREQUEST
_SETLABELSREQUEST.fields_by_name['resource_labels'].message_type = _SETLABELSREQUEST_RESOURCELABELSENTRY
_SETNETWORKPOLICYREQUEST.fields_by_name['network_policy'].message_type = _NETWORKPOLICY
_SETMAINTENANCEPOLICYREQUEST.fields_by_name['maintenance_policy'].message_type = _MAINTENANCEPOLICY
DESCRIPTOR.message_types_by_name['NodeConfig'] = _NODECONFIG
DESCRIPTOR.message_types_by_name['MasterAuth'] = _MASTERAUTH
DESCRIPTOR.message_types_by_name['ClientCertificateConfig'] = _CLIENTCERTIFICATECONFIG
DESCRIPTOR.message_types_by_name['AddonsConfig'] = _ADDONSCONFIG
DESCRIPTOR.message_types_by_name['HttpLoadBalancing'] = _HTTPLOADBALANCING
DESCRIPTOR.message_types_by_name['HorizontalPodAutoscaling'] = _HORIZONTALPODAUTOSCALING
DESCRIPTOR.message_types_by_name['KubernetesDashboard'] = _KUBERNETESDASHBOARD
DESCRIPTOR.message_types_by_name['NetworkPolicyConfig'] = _NETWORKPOLICYCONFIG
DESCRIPTOR.message_types_by_name['MasterAuthorizedNetworksConfig'] = _MASTERAUTHORIZEDNETWORKSCONFIG
DESCRIPTOR.message_types_by_name['LegacyAbac'] = _LEGACYABAC
DESCRIPTOR.message_types_by_name['NetworkPolicy'] = _NETWORKPOLICY
DESCRIPTOR.message_types_by_name['IPAllocationPolicy'] = _IPALLOCATIONPOLICY
DESCRIPTOR.message_types_by_name['Cluster'] = _CLUSTER
DESCRIPTOR.message_types_by_name['ClusterUpdate'] = _CLUSTERUPDATE
DESCRIPTOR.message_types_by_name['Operation'] = _OPERATION
DESCRIPTOR.message_types_by_name['CreateClusterRequest'] = _CREATECLUSTERREQUEST
DESCRIPTOR.message_types_by_name['GetClusterRequest'] = _GETCLUSTERREQUEST
DESCRIPTOR.message_types_by_name['UpdateClusterRequest'] = _UPDATECLUSTERREQUEST
DESCRIPTOR.message_types_by_name['UpdateNodePoolRequest'] = _UPDATENODEPOOLREQUEST
DESCRIPTOR.message_types_by_name['SetNodePoolAutoscalingRequest'] = _SETNODEPOOLAUTOSCALINGREQUEST
DESCRIPTOR.message_types_by_name['SetLoggingServiceRequest'] = _SETLOGGINGSERVICEREQUEST
DESCRIPTOR.message_types_by_name['SetMonitoringServiceRequest'] = _SETMONITORINGSERVICEREQUEST
DESCRIPTOR.message_types_by_name['SetAddonsConfigRequest'] = _SETADDONSCONFIGREQUEST
DESCRIPTOR.message_types_by_name['SetLocationsRequest'] = _SETLOCATIONSREQUEST
DESCRIPTOR.message_types_by_name['UpdateMasterRequest'] = _UPDATEMASTERREQUEST
DESCRIPTOR.message_types_by_name['SetMasterAuthRequest'] = _SETMASTERAUTHREQUEST
DESCRIPTOR.message_types_by_name['DeleteClusterRequest'] = _DELETECLUSTERREQUEST
DESCRIPTOR.message_types_by_name['ListClustersRequest'] = _LISTCLUSTERSREQUEST
DESCRIPTOR.message_types_by_name['ListClustersResponse'] = _LISTCLUSTERSRESPONSE
DESCRIPTOR.message_types_by_name['GetOperationRequest'] = _GETOPERATIONREQUEST
DESCRIPTOR.message_types_by_name['ListOperationsRequest'] = _LISTOPERATIONSREQUEST
DESCRIPTOR.message_types_by_name['CancelOperationRequest'] = _CANCELOPERATIONREQUEST
DESCRIPTOR.message_types_by_name['ListOperationsResponse'] = _LISTOPERATIONSRESPONSE
DESCRIPTOR.message_types_by_name['GetServerConfigRequest'] = _GETSERVERCONFIGREQUEST
DESCRIPTOR.message_types_by_name['ServerConfig'] = _SERVERCONFIG
DESCRIPTOR.message_types_by_name['CreateNodePoolRequest'] = _CREATENODEPOOLREQUEST
DESCRIPTOR.message_types_by_name['DeleteNodePoolRequest'] = _DELETENODEPOOLREQUEST
DESCRIPTOR.message_types_by_name['ListNodePoolsRequest'] = _LISTNODEPOOLSREQUEST
DESCRIPTOR.message_types_by_name['GetNodePoolRequest'] = _GETNODEPOOLREQUEST
DESCRIPTOR.message_types_by_name['NodePool'] = _NODEPOOL
DESCRIPTOR.message_types_by_name['NodeManagement'] = _NODEMANAGEMENT
DESCRIPTOR.message_types_by_name['AutoUpgradeOptions'] = _AUTOUPGRADEOPTIONS
DESCRIPTOR.message_types_by_name['MaintenancePolicy'] = _MAINTENANCEPOLICY
DESCRIPTOR.message_types_by_name['MaintenanceWindow'] = _MAINTENANCEWINDOW
DESCRIPTOR.message_types_by_name['DailyMaintenanceWindow'] = _DAILYMAINTENANCEWINDOW
DESCRIPTOR.message_types_by_name['SetNodePoolManagementRequest'] = _SETNODEPOOLMANAGEMENTREQUEST
DESCRIPTOR.message_types_by_name['SetNodePoolSizeRequest'] = _SETNODEPOOLSIZEREQUEST
DESCRIPTOR.message_types_by_name['RollbackNodePoolUpgradeRequest'] = _ROLLBACKNODEPOOLUPGRADEREQUEST
DESCRIPTOR.message_types_by_name['ListNodePoolsResponse'] = _LISTNODEPOOLSRESPONSE
DESCRIPTOR.message_types_by_name['NodePoolAutoscaling'] = _NODEPOOLAUTOSCALING
DESCRIPTOR.message_types_by_name['SetLabelsRequest'] = _SETLABELSREQUEST
DESCRIPTOR.message_types_by_name['SetLegacyAbacRequest'] = _SETLEGACYABACREQUEST
DESCRIPTOR.message_types_by_name['StartIPRotationRequest'] = _STARTIPROTATIONREQUEST
DESCRIPTOR.message_types_by_name['CompleteIPRotationRequest'] = _COMPLETEIPROTATIONREQUEST
DESCRIPTOR.message_types_by_name['AcceleratorConfig'] = _ACCELERATORCONFIG
DESCRIPTOR.message_types_by_name['SetNetworkPolicyRequest'] = _SETNETWORKPOLICYREQUEST
DESCRIPTOR.message_types_by_name['SetMaintenancePolicyRequest'] = _SETMAINTENANCEPOLICYREQUEST

NodeConfig = _reflection.GeneratedProtocolMessageType('NodeConfig', (_message.Message,), dict(

  MetadataEntry = _reflection.GeneratedProtocolMessageType('MetadataEntry', (_message.Message,), dict(
    DESCRIPTOR = _NODECONFIG_METADATAENTRY,
    __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
    # @@protoc_insertion_point(class_scope:google.container.v1.NodeConfig.MetadataEntry)
    ))
  ,

  LabelsEntry = _reflection.GeneratedProtocolMessageType('LabelsEntry', (_message.Message,), dict(
    DESCRIPTOR = _NODECONFIG_LABELSENTRY,
    __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
    # @@protoc_insertion_point(class_scope:google.container.v1.NodeConfig.LabelsEntry)
    ))
  ,
  DESCRIPTOR = _NODECONFIG,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Parameters that describe the nodes in a cluster.


  Attributes:
      machine_type:
          The name of a Google Compute Engine `machine type
          </compute/docs/machine-types>`__ (e.g. ``n1-standard-1``).  If
          unspecified, the default machine type is ``n1-standard-1``.
      disk_size_gb:
          Size of the disk attached to each node, specified in GB. The
          smallest allowed disk size is 10GB.  If unspecified, the
          default disk size is 100GB.
      oauth_scopes:
          The set of Google API scopes to be made available on all of
          the node VMs under the "default" service account.  The
          following scopes are recommended, but not required, and by
          default are not included:  -
          ``https://www.googleapis.com/auth/compute`` is required for
          mounting    persistent storage on your nodes. -
          ``https://www.googleapis.com/auth/devstorage.read_only`` is
          required    for communicating with **gcr.io** (the `Google
          Container    Registry </container-registry/>`__).  If
          unspecified, no scopes are added, unless Cloud Logging or
          Cloud Monitoring are enabled, in which case their required
          scopes will be added.
      service_account:
          The Google Cloud Platform Service Account to be used by the
          node VMs. If no Service Account is specified, the "default"
          service account is used.
      metadata:
          The metadata key/value pairs assigned to instances in the
          cluster.  Keys must conform to the regexp [a-zA-Z0-9-\_]+ and
          be less than 128 bytes in length. These are reflected as part
          of a URL in the metadata server. Additionally, to avoid
          ambiguity, keys must not conflict with any other metadata keys
          for the project or be one of the four reserved keys:
          "instance-template", "kube-env", "startup-script", and "user-
          data"  Values are free-form strings, and only have meaning as
          interpreted by the image running in the instance. The only
          restriction placed on them is that each value's size must be
          less than or equal to 32 KB.  The total size of all keys and
          values must be less than 512 KB.
      image_type:
          The image type to use for this node. Note that for a given
          image type, the latest version of it will be used.
      labels:
          The map of Kubernetes labels (key/value pairs) to be applied
          to each node. These will added in addition to any default
          label(s) that Kubernetes may apply to the node. In case of
          conflict in label keys, the applied set may differ depending
          on the Kubernetes version -- it's best to assume the behavior
          is undefined and conflicts should be avoided. For more
          information, including usage and the valid values, see:
          https://kubernetes.io/docs/concepts/overview/working-with-
          objects/labels/
      local_ssd_count:
          The number of local SSD disks to be attached to the node.  The
          limit for this value is dependant upon the maximum number of
          disks available on a machine per zone. See:
          https://cloud.google.com/compute/docs/disks/local-
          ssd#local\_ssd\_limits for more information.
      tags:
          The list of instance tags applied to all nodes. Tags are used
          to identify valid sources or targets for network firewalls and
          are specified by the client during cluster or node pool
          creation. Each tag within the list must comply with RFC1035.
      preemptible:
          Whether the nodes are created as preemptible VM instances.
          See:
          https://cloud.google.com/compute/docs/instances/preemptible
          for more information about preemptible VM instances.
      accelerators:
          A list of hardware accelerators to be attached to each node.
          See https://cloud.google.com/compute/docs/gpus for more
          information about support for GPUs.
      min_cpu_platform:
          Minimum CPU platform to be used by this instance. The instance
          may be scheduled on the specified or newer CPU platform.
          Applicable values are the friendly names of CPU platforms,
          such as minCpuPlatform: "Intel Haswell" or minCpuPlatform:
          "Intel Sandy Bridge". For more information, read `how to
          specify min CPU platform
          <https://cloud.google.com/compute/docs/instances/specify-min-
          cpu-platform>`__
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.NodeConfig)
  ))
_sym_db.RegisterMessage(NodeConfig)
_sym_db.RegisterMessage(NodeConfig.MetadataEntry)
_sym_db.RegisterMessage(NodeConfig.LabelsEntry)

MasterAuth = _reflection.GeneratedProtocolMessageType('MasterAuth', (_message.Message,), dict(
  DESCRIPTOR = _MASTERAUTH,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """The authentication information for accessing the master endpoint.
  Authentication can be done using HTTP basic auth or using client
  certificates.


  Attributes:
      username:
          The username to use for HTTP basic authentication to the
          master endpoint. For clusters v1.6.0 and later, you can
          disable basic authentication by providing an empty username.
      password:
          The password to use for HTTP basic authentication to the
          master endpoint. Because the master endpoint is open to the
          Internet, you should create a strong password. If a password
          is provided for cluster creation, username must be non-empty.
      client_certificate_config:
          Configuration for client certificate authentication on the
          cluster. If no configuration is specified, a client
          certificate is issued.
      cluster_ca_certificate:
          [Output only] Base64-encoded public certificate that is the
          root of trust for the cluster.
      client_certificate:
          [Output only] Base64-encoded public certificate used by
          clients to authenticate to the cluster endpoint.
      client_key:
          [Output only] Base64-encoded private key used by clients to
          authenticate to the cluster endpoint.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.MasterAuth)
  ))
_sym_db.RegisterMessage(MasterAuth)

ClientCertificateConfig = _reflection.GeneratedProtocolMessageType('ClientCertificateConfig', (_message.Message,), dict(
  DESCRIPTOR = _CLIENTCERTIFICATECONFIG,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Configuration for client certificates on the cluster.


  Attributes:
      issue_client_certificate:
          Issue a client certificate.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.ClientCertificateConfig)
  ))
_sym_db.RegisterMessage(ClientCertificateConfig)

AddonsConfig = _reflection.GeneratedProtocolMessageType('AddonsConfig', (_message.Message,), dict(
  DESCRIPTOR = _ADDONSCONFIG,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Configuration for the addons that can be automatically spun up in the
  cluster, enabling additional functionality.


  Attributes:
      http_load_balancing:
          Configuration for the HTTP (L7) load balancing controller
          addon, which makes it easy to set up HTTP load balancers for
          services in a cluster.
      horizontal_pod_autoscaling:
          Configuration for the horizontal pod autoscaling feature,
          which increases or decreases the number of replica pods a
          replication controller has based on the resource usage of the
          existing pods.
      kubernetes_dashboard:
          Configuration for the Kubernetes Dashboard.
      network_policy_config:
          Configuration for NetworkPolicy. This only tracks whether the
          addon is enabled or not on the Master, it does not track
          whether network policy is enabled for the nodes.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.AddonsConfig)
  ))
_sym_db.RegisterMessage(AddonsConfig)

HttpLoadBalancing = _reflection.GeneratedProtocolMessageType('HttpLoadBalancing', (_message.Message,), dict(
  DESCRIPTOR = _HTTPLOADBALANCING,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Configuration options for the HTTP (L7) load balancing controller addon,
  which makes it easy to set up HTTP load balancers for services in a
  cluster.


  Attributes:
      disabled:
          Whether the HTTP Load Balancing controller is enabled in the
          cluster. When enabled, it runs a small pod in the cluster that
          manages the load balancers.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.HttpLoadBalancing)
  ))
_sym_db.RegisterMessage(HttpLoadBalancing)

HorizontalPodAutoscaling = _reflection.GeneratedProtocolMessageType('HorizontalPodAutoscaling', (_message.Message,), dict(
  DESCRIPTOR = _HORIZONTALPODAUTOSCALING,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Configuration options for the horizontal pod autoscaling feature, which
  increases or decreases the number of replica pods a replication
  controller has based on the resource usage of the existing pods.


  Attributes:
      disabled:
          Whether the Horizontal Pod Autoscaling feature is enabled in
          the cluster. When enabled, it ensures that a Heapster pod is
          running in the cluster, which is also used by the Cloud
          Monitoring service.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.HorizontalPodAutoscaling)
  ))
_sym_db.RegisterMessage(HorizontalPodAutoscaling)

KubernetesDashboard = _reflection.GeneratedProtocolMessageType('KubernetesDashboard', (_message.Message,), dict(
  DESCRIPTOR = _KUBERNETESDASHBOARD,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Configuration for the Kubernetes Dashboard.


  Attributes:
      disabled:
          Whether the Kubernetes Dashboard is enabled for this cluster.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.KubernetesDashboard)
  ))
_sym_db.RegisterMessage(KubernetesDashboard)

NetworkPolicyConfig = _reflection.GeneratedProtocolMessageType('NetworkPolicyConfig', (_message.Message,), dict(
  DESCRIPTOR = _NETWORKPOLICYCONFIG,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Configuration for NetworkPolicy. This only tracks whether the addon is
  enabled or not on the Master, it does not track whether network policy
  is enabled for the nodes.


  Attributes:
      disabled:
          Whether NetworkPolicy is enabled for this cluster.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.NetworkPolicyConfig)
  ))
_sym_db.RegisterMessage(NetworkPolicyConfig)

MasterAuthorizedNetworksConfig = _reflection.GeneratedProtocolMessageType('MasterAuthorizedNetworksConfig', (_message.Message,), dict(

  CidrBlock = _reflection.GeneratedProtocolMessageType('CidrBlock', (_message.Message,), dict(
    DESCRIPTOR = _MASTERAUTHORIZEDNETWORKSCONFIG_CIDRBLOCK,
    __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
    ,
    __doc__ = """CidrBlock contains an optional name and one CIDR block.


    Attributes:
        display_name:
            display\_name is an optional field for users to identify CIDR
            blocks.
        cidr_block:
            cidr\_block must be specified in CIDR notation.
    """,
    # @@protoc_insertion_point(class_scope:google.container.v1.MasterAuthorizedNetworksConfig.CidrBlock)
    ))
  ,
  DESCRIPTOR = _MASTERAUTHORIZEDNETWORKSCONFIG,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Master authorized networks is a Beta feature. Configuration options for
  the master authorized networks feature. Enabled master authorized
  networks will disallow all external traffic to access Kubernetes master
  through HTTPS except traffic from the given CIDR blocks, Google Compute
  Engine Public IPs and Google Prod IPs.


  Attributes:
      enabled:
          Whether or not master authorized networks is enabled.
      cidr_blocks:
          cidr\_blocks define up to 10 external networks that could
          access Kubernetes master through HTTPS.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.MasterAuthorizedNetworksConfig)
  ))
_sym_db.RegisterMessage(MasterAuthorizedNetworksConfig)
_sym_db.RegisterMessage(MasterAuthorizedNetworksConfig.CidrBlock)

LegacyAbac = _reflection.GeneratedProtocolMessageType('LegacyAbac', (_message.Message,), dict(
  DESCRIPTOR = _LEGACYABAC,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Configuration for the legacy Attribute Based Access Control
  authorization mode.


  Attributes:
      enabled:
          Whether the ABAC authorizer is enabled for this cluster. When
          enabled, identities in the system, including service accounts,
          nodes, and controllers, will have statically granted
          permissions beyond those provided by the RBAC configuration or
          IAM.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.LegacyAbac)
  ))
_sym_db.RegisterMessage(LegacyAbac)

NetworkPolicy = _reflection.GeneratedProtocolMessageType('NetworkPolicy', (_message.Message,), dict(
  DESCRIPTOR = _NETWORKPOLICY,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Configuration options for the NetworkPolicy feature.
  https://kubernetes.io/docs/concepts/services-networking/networkpolicies/


  Attributes:
      provider:
          The selected network policy provider.
      enabled:
          Whether network policy is enabled on the cluster.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.NetworkPolicy)
  ))
_sym_db.RegisterMessage(NetworkPolicy)

IPAllocationPolicy = _reflection.GeneratedProtocolMessageType('IPAllocationPolicy', (_message.Message,), dict(
  DESCRIPTOR = _IPALLOCATIONPOLICY,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Configuration for controlling how IPs are allocated in the cluster.


  Attributes:
      use_ip_aliases:
          Whether alias IPs will be used for pod IPs in the cluster.
      create_subnetwork:
          Whether a new subnetwork will be created automatically for the
          cluster.  This field is only applicable when
          ``use_ip_aliases`` is true.
      subnetwork_name:
          A custom subnetwork name to be used if ``create_subnetwork``
          is true. If this field is empty, then an automatic name will
          be chosen for the new subnetwork.
      cluster_ipv4_cidr:
          This field is deprecated, use cluster\_ipv4\_cidr\_block.
      node_ipv4_cidr:
          This field is deprecated, use node\_ipv4\_cidr\_block.
      services_ipv4_cidr:
          This field is deprecated, use services\_ipv4\_cidr\_block.
      cluster_secondary_range_name:
          The name of the secondary range to be used for the cluster
          CIDR block. The secondary range will be used for pod IP
          addresses. This must be an existing secondary range associated
          with the cluster subnetwork.  This field is only applicable
          with use\_ip\_aliases is true and create\_subnetwork is false.
      services_secondary_range_name:
          The name of the secondary range to be used as for the services
          CIDR block. The secondary range will be used for service
          ClusterIPs. This must be an existing secondary range
          associated with the cluster subnetwork.  This field is only
          applicable with use\_ip\_aliases is true and
          create\_subnetwork is false.
      cluster_ipv4_cidr_block:
          The IP address range for the cluster pod IPs. If this field is
          set, then ``cluster.cluster_ipv4_cidr`` must be left blank.
          This field is only applicable when ``use_ip_aliases`` is true.
          Set to blank to have a range chosen with the default size.
          Set to /netmask (e.g. ``/14``) to have a range chosen with a
          specific netmask.  Set to a `CIDR
          <http://en.wikipedia.org/wiki/Classless_Inter-
          Domain_Routing>`__ notation (e.g. ``10.96.0.0/14``) from the
          RFC-1918 private networks (e.g. ``10.0.0.0/8``,
          ``172.16.0.0/12``, ``192.168.0.0/16``) to pick a specific
          range to use.
      node_ipv4_cidr_block:
          The IP address range of the instance IPs in this cluster.
          This is applicable only if ``create_subnetwork`` is true.  Set
          to blank to have a range chosen with the default size.  Set to
          /netmask (e.g. ``/14``) to have a range chosen with a specific
          netmask.  Set to a `CIDR
          <http://en.wikipedia.org/wiki/Classless_Inter-
          Domain_Routing>`__ notation (e.g. ``10.96.0.0/14``) from the
          RFC-1918 private networks (e.g. ``10.0.0.0/8``,
          ``172.16.0.0/12``, ``192.168.0.0/16``) to pick a specific
          range to use.
      services_ipv4_cidr_block:
          The IP address range of the services IPs in this cluster. If
          blank, a range will be automatically chosen with the default
          size.  This field is only applicable when ``use_ip_aliases``
          is true.  Set to blank to have a range chosen with the default
          size.  Set to /netmask (e.g. ``/14``) to have a range chosen
          with a specific netmask.  Set to a `CIDR
          <http://en.wikipedia.org/wiki/Classless_Inter-
          Domain_Routing>`__ notation (e.g. ``10.96.0.0/14``) from the
          RFC-1918 private networks (e.g. ``10.0.0.0/8``,
          ``172.16.0.0/12``, ``192.168.0.0/16``) to pick a specific
          range to use.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.IPAllocationPolicy)
  ))
_sym_db.RegisterMessage(IPAllocationPolicy)

Cluster = _reflection.GeneratedProtocolMessageType('Cluster', (_message.Message,), dict(

  ResourceLabelsEntry = _reflection.GeneratedProtocolMessageType('ResourceLabelsEntry', (_message.Message,), dict(
    DESCRIPTOR = _CLUSTER_RESOURCELABELSENTRY,
    __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
    # @@protoc_insertion_point(class_scope:google.container.v1.Cluster.ResourceLabelsEntry)
    ))
  ,
  DESCRIPTOR = _CLUSTER,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """A Google Container Engine cluster.


  Attributes:
      name:
          The name of this cluster. The name must be unique within this
          project and zone, and can be up to 40 characters with the
          following restrictions:  -  Lowercase letters, numbers, and
          hyphens only. -  Must start with a letter. -  Must end with a
          number or a letter.
      description:
          An optional description of this cluster.
      initial_node_count:
          The number of nodes to create in this cluster. You must ensure
          that your Compute Engine resource quota is sufficient for this
          number of instances. You must also have available firewall and
          routes quota. For requests, this field should only be used in
          lieu of a "node\_pool" object, since this configuration (along
          with the "node\_config") will be used to create a "NodePool"
          object with an auto-generated name. Do not use this and a
          node\_pool at the same time.
      node_config:
          Parameters used in creating the cluster's nodes. See
          ``nodeConfig`` for the description of its properties. For
          requests, this field should only be used in lieu of a
          "node\_pool" object, since this configuration (along with the
          "initial\_node\_count") will be used to create a "NodePool"
          object with an auto-generated name. Do not use this and a
          node\_pool at the same time. For responses, this field will be
          populated with the node configuration of the first node pool.
          If unspecified, the defaults are used.
      master_auth:
          The authentication information for accessing the master
          endpoint.
      logging_service:
          The logging service the cluster should use to write logs.
          Currently available options:  -  ``logging.googleapis.com`` -
          the Google Cloud Logging service. -  ``none`` - no logs will
          be exported from the cluster. -  if left as an empty string,\
          ``logging.googleapis.com`` will be used.
      monitoring_service:
          The monitoring service the cluster should use to write
          metrics. Currently available options:  -
          ``monitoring.googleapis.com`` - the Google Cloud Monitoring
          service. -  ``none`` - no metrics will be exported from the
          cluster. -  if left as an empty string,
          ``monitoring.googleapis.com`` will be    used.
      network:
          The name of the Google Compute Engine `network
          </compute/docs/networks-and-firewalls#networks>`__ to which
          the cluster is connected. If left unspecified, the ``default``
          network will be used.
      cluster_ipv4_cidr:
          The IP address range of the container pods in this cluster, in
          `CIDR <http://en.wikipedia.org/wiki/Classless_Inter-
          Domain_Routing>`__ notation (e.g. ``10.96.0.0/14``). Leave
          blank to have one automatically chosen or specify a ``/14``
          block in ``10.0.0.0/8``.
      addons_config:
          Configurations for the various addons available to run in the
          cluster.
      subnetwork:
          The name of the Google Compute Engine `subnetwork
          </compute/docs/subnetworks>`__ to which the cluster is
          connected.
      node_pools:
          The node pools associated with this cluster. This field should
          not be set if "node\_config" or "initial\_node\_count" are
          specified.
      locations:
          The list of Google Compute Engine `locations
          </compute/docs/zones#available>`__ in which the cluster's
          nodes should be located.
      enable_kubernetes_alpha:
          Kubernetes alpha features are enabled on this cluster. This
          includes alpha API groups (e.g. v1alpha1) and features that
          may not be production ready in the kubernetes version of the
          master and nodes. The cluster has no SLA for uptime and
          master/node upgrades are disabled. Alpha enabled clusters are
          automatically deleted thirty days after creation.
      resource_labels:
          The resource labels for the cluster to use to annotate any
          related Google Compute Engine resources.
      label_fingerprint:
          The fingerprint of the set of labels for this cluster.
      legacy_abac:
          Configuration for the legacy ABAC authorization mode.
      network_policy:
          Configuration options for the NetworkPolicy feature.
      ip_allocation_policy:
          Configuration for cluster IP allocation.
      master_authorized_networks_config:
          Master authorized networks is a Beta feature. The
          configuration options for master authorized networks feature.
      maintenance_policy:
          Configure the maintenance policy for this cluster.
      self_link:
          [Output only] Server-defined URL for the resource.
      zone:
          [Output only] The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      endpoint:
          [Output only] The IP address of this cluster's master
          endpoint. The endpoint can be accessed from the internet at
          ``https://username:password@endpoint/``.  See the
          ``masterAuth`` property of this resource for username and
          password information.
      initial_cluster_version:
          The initial Kubernetes version for this cluster. Valid
          versions are those found in validMasterVersions returned by
          getServerConfig. The version can be upgraded over time; such
          upgrades are reflected in currentMasterVersion and
          currentNodeVersion.
      current_master_version:
          [Output only] The current software version of the master
          endpoint.
      current_node_version:
          [Output only] The current version of the node software
          components. If they are currently at multiple versions because
          they're in the process of being upgraded, this reflects the
          minimum version of all nodes.
      create_time:
          [Output only] The time the cluster was created, in `RFC3339
          <https://www.ietf.org/rfc/rfc3339.txt>`__ text format.
      status:
          [Output only] The current status of this cluster.
      status_message:
          [Output only] Additional information about the current status
          of this cluster, if available.
      node_ipv4_cidr_size:
          [Output only] The size of the address space on each node for
          hosting containers. This is provisioned from within the
          ``container_ipv4_cidr`` range.
      services_ipv4_cidr:
          [Output only] The IP address range of the Kubernetes services
          in this cluster, in `CIDR
          <http://en.wikipedia.org/wiki/Classless_Inter-
          Domain_Routing>`__ notation (e.g. ``1.2.3.4/29``). Service
          addresses are typically put in the last ``/16`` from the
          container CIDR.
      instance_group_urls:
          Deprecated. Use node\_pools.instance\_group\_urls.
      current_node_count:
          [Output only] The number of nodes currently in the cluster.
      expire_time:
          [Output only] The time the cluster will be automatically
          deleted in `RFC3339 <https://www.ietf.org/rfc/rfc3339.txt>`__
          text format.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.Cluster)
  ))
_sym_db.RegisterMessage(Cluster)
_sym_db.RegisterMessage(Cluster.ResourceLabelsEntry)

ClusterUpdate = _reflection.GeneratedProtocolMessageType('ClusterUpdate', (_message.Message,), dict(
  DESCRIPTOR = _CLUSTERUPDATE,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """ClusterUpdate describes an update to the cluster. Exactly one update can
  be applied to a cluster with each request, so at most one field can be
  provided.


  Attributes:
      desired_node_version:
          The Kubernetes version to change the nodes to (typically an
          upgrade). Use ``-`` to upgrade to the latest version supported
          by the server.
      desired_monitoring_service:
          The monitoring service the cluster should use to write
          metrics. Currently available options:  -
          "monitoring.googleapis.com" - the Google Cloud Monitoring
          service -  "none" - no metrics will be exported from the
          cluster
      desired_addons_config:
          Configurations for the various addons available to run in the
          cluster.
      desired_node_pool_id:
          The node pool to be upgraded. This field is mandatory if
          "desired\_node\_version", "desired\_image\_family" or
          "desired\_node\_pool\_autoscaling" is specified and there is
          more than one node pool on the cluster.
      desired_image_type:
          The desired image type for the node pool. NOTE: Set the
          "desired\_node\_pool" field as well.
      desired_node_pool_autoscaling:
          Autoscaler configuration for the node pool specified in
          desired\_node\_pool\_id. If there is only one pool in the
          cluster and desired\_node\_pool\_id is not provided then the
          change applies to that single node pool.
      desired_locations:
          The desired list of Google Compute Engine `locations
          </compute/docs/zones#available>`__ in which the cluster's
          nodes should be located. Changing the locations a cluster is
          in will result in nodes being either created or removed from
          the cluster, depending on whether locations are being added or
          removed.  This list must always include the cluster's primary
          zone.
      desired_master_authorized_networks_config:
          Master authorized networks is a Beta feature. The desired
          configuration options for master authorized networks feature.
      desired_master_version:
          The Kubernetes version to change the master to. The only valid
          value is the latest supported version. Use "-" to have the
          server automatically select the latest version.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.ClusterUpdate)
  ))
_sym_db.RegisterMessage(ClusterUpdate)

Operation = _reflection.GeneratedProtocolMessageType('Operation', (_message.Message,), dict(
  DESCRIPTOR = _OPERATION,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """This operation resource represents operations that may have happened or
  are happening on the cluster. All fields are output only.


  Attributes:
      name:
          The server-assigned ID for the operation.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the operation is
          taking place.
      operation_type:
          The operation type.
      status:
          The current status of the operation.
      detail:
          Detailed operation progress, if available.
      status_message:
          If an error has occurred, a textual description of the error.
      self_link:
          Server-defined URL for the resource.
      target_link:
          Server-defined URL for the target of the operation.
      start_time:
          [Output only] The time the operation started, in `RFC3339
          <https://www.ietf.org/rfc/rfc3339.txt>`__ text format.
      end_time:
          [Output only] The time the operation completed, in `RFC3339
          <https://www.ietf.org/rfc/rfc3339.txt>`__ text format.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.Operation)
  ))
_sym_db.RegisterMessage(Operation)

CreateClusterRequest = _reflection.GeneratedProtocolMessageType('CreateClusterRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATECLUSTERREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """CreateClusterRequest creates a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster:
          A `cluster resource </container-
          engine/reference/rest/v1/projects.zones.clusters>`__
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.CreateClusterRequest)
  ))
_sym_db.RegisterMessage(CreateClusterRequest)

GetClusterRequest = _reflection.GeneratedProtocolMessageType('GetClusterRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETCLUSTERREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """GetClusterRequest gets the settings of a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to retrieve.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.GetClusterRequest)
  ))
_sym_db.RegisterMessage(GetClusterRequest)

UpdateClusterRequest = _reflection.GeneratedProtocolMessageType('UpdateClusterRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATECLUSTERREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """UpdateClusterRequest updates the settings of a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to upgrade.
      update:
          A description of the update.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.UpdateClusterRequest)
  ))
_sym_db.RegisterMessage(UpdateClusterRequest)

UpdateNodePoolRequest = _reflection.GeneratedProtocolMessageType('UpdateNodePoolRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATENODEPOOLREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """UpdateNodePoolRequests update a node pool's image and/or version.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to upgrade.
      node_pool_id:
          The name of the node pool to upgrade.
      node_version:
          The Kubernetes version to change the nodes to (typically an
          upgrade). Use ``-`` to upgrade to the latest version supported
          by the server.
      image_type:
          The desired image type for the node pool.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.UpdateNodePoolRequest)
  ))
_sym_db.RegisterMessage(UpdateNodePoolRequest)

SetNodePoolAutoscalingRequest = _reflection.GeneratedProtocolMessageType('SetNodePoolAutoscalingRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETNODEPOOLAUTOSCALINGREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """SetNodePoolAutoscalingRequest sets the autoscaler settings of a node
  pool.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to upgrade.
      node_pool_id:
          The name of the node pool to upgrade.
      autoscaling:
          Autoscaling configuration for the node pool.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.SetNodePoolAutoscalingRequest)
  ))
_sym_db.RegisterMessage(SetNodePoolAutoscalingRequest)

SetLoggingServiceRequest = _reflection.GeneratedProtocolMessageType('SetLoggingServiceRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETLOGGINGSERVICEREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """SetLoggingServiceRequest sets the logging service of a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to upgrade.
      logging_service:
          The logging service the cluster should use to write metrics.
          Currently available options:  -  "logging.googleapis.com" -
          the Google Cloud Logging service -  "none" - no metrics will
          be exported from the cluster
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.SetLoggingServiceRequest)
  ))
_sym_db.RegisterMessage(SetLoggingServiceRequest)

SetMonitoringServiceRequest = _reflection.GeneratedProtocolMessageType('SetMonitoringServiceRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETMONITORINGSERVICEREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """SetMonitoringServiceRequest sets the monitoring service of a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to upgrade.
      monitoring_service:
          The monitoring service the cluster should use to write
          metrics. Currently available options:  -
          "monitoring.googleapis.com" - the Google Cloud Monitoring
          service -  "none" - no metrics will be exported from the
          cluster
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.SetMonitoringServiceRequest)
  ))
_sym_db.RegisterMessage(SetMonitoringServiceRequest)

SetAddonsConfigRequest = _reflection.GeneratedProtocolMessageType('SetAddonsConfigRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETADDONSCONFIGREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """SetAddonsConfigRequest sets the addons associated with the cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to upgrade.
      addons_config:
          The desired configurations for the various addons available to
          run in the cluster.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.SetAddonsConfigRequest)
  ))
_sym_db.RegisterMessage(SetAddonsConfigRequest)

SetLocationsRequest = _reflection.GeneratedProtocolMessageType('SetLocationsRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETLOCATIONSREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """SetLocationsRequest sets the locations of the cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to upgrade.
      locations:
          The desired list of Google Compute Engine `locations
          </compute/docs/zones#available>`__ in which the cluster's
          nodes should be located. Changing the locations a cluster is
          in will result in nodes being either created or removed from
          the cluster, depending on whether locations are being added or
          removed.  This list must always include the cluster's primary
          zone.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.SetLocationsRequest)
  ))
_sym_db.RegisterMessage(SetLocationsRequest)

UpdateMasterRequest = _reflection.GeneratedProtocolMessageType('UpdateMasterRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATEMASTERREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """UpdateMasterRequest updates the master of the cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to upgrade.
      master_version:
          The Kubernetes version to change the master to. The only valid
          value is the latest supported version. Use "-" to have the
          server automatically select the latest version.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.UpdateMasterRequest)
  ))
_sym_db.RegisterMessage(UpdateMasterRequest)

SetMasterAuthRequest = _reflection.GeneratedProtocolMessageType('SetMasterAuthRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETMASTERAUTHREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """SetMasterAuthRequest updates the admin password of a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to upgrade.
      action:
          The exact form of action to be taken on the master auth.
      update:
          A description of the update.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.SetMasterAuthRequest)
  ))
_sym_db.RegisterMessage(SetMasterAuthRequest)

DeleteClusterRequest = _reflection.GeneratedProtocolMessageType('DeleteClusterRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETECLUSTERREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """DeleteClusterRequest deletes a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to delete.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.DeleteClusterRequest)
  ))
_sym_db.RegisterMessage(DeleteClusterRequest)

ListClustersRequest = _reflection.GeneratedProtocolMessageType('ListClustersRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTCLUSTERSREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """ListClustersRequest lists clusters.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides, or "-" for all zones.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.ListClustersRequest)
  ))
_sym_db.RegisterMessage(ListClustersRequest)

ListClustersResponse = _reflection.GeneratedProtocolMessageType('ListClustersResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTCLUSTERSRESPONSE,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """ListClustersResponse is the result of ListClustersRequest.


  Attributes:
      clusters:
          A list of clusters in the project in the specified zone, or
          across all ones.
      missing_zones:
          If any zones are listed here, the list of clusters returned
          may be missing those zones.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.ListClustersResponse)
  ))
_sym_db.RegisterMessage(ListClustersResponse)

GetOperationRequest = _reflection.GeneratedProtocolMessageType('GetOperationRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETOPERATIONREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """GetOperationRequest gets a single operation.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      operation_id:
          The server-assigned ``name`` of the operation.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.GetOperationRequest)
  ))
_sym_db.RegisterMessage(GetOperationRequest)

ListOperationsRequest = _reflection.GeneratedProtocolMessageType('ListOperationsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTOPERATIONSREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """ListOperationsRequest lists operations.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ to return operations for,
          or ``-`` for all zones.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.ListOperationsRequest)
  ))
_sym_db.RegisterMessage(ListOperationsRequest)

CancelOperationRequest = _reflection.GeneratedProtocolMessageType('CancelOperationRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCELOPERATIONREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """CancelOperationRequest cancels a single operation.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the operation
          resides.
      operation_id:
          The server-assigned ``name`` of the operation.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.CancelOperationRequest)
  ))
_sym_db.RegisterMessage(CancelOperationRequest)

ListOperationsResponse = _reflection.GeneratedProtocolMessageType('ListOperationsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTOPERATIONSRESPONSE,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """ListOperationsResponse is the result of ListOperationsRequest.


  Attributes:
      operations:
          A list of operations in the project in the specified zone.
      missing_zones:
          If any zones are listed here, the list of operations returned
          may be missing the operations from those zones.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.ListOperationsResponse)
  ))
_sym_db.RegisterMessage(ListOperationsResponse)

GetServerConfigRequest = _reflection.GeneratedProtocolMessageType('GetServerConfigRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETSERVERCONFIGREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Gets the current Container Engine service configuration.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ to return operations for.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.GetServerConfigRequest)
  ))
_sym_db.RegisterMessage(GetServerConfigRequest)

ServerConfig = _reflection.GeneratedProtocolMessageType('ServerConfig', (_message.Message,), dict(
  DESCRIPTOR = _SERVERCONFIG,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Container Engine service configuration.


  Attributes:
      default_cluster_version:
          Version of Kubernetes the service deploys by default.
      valid_node_versions:
          List of valid node upgrade target versions.
      default_image_type:
          Default image type.
      valid_image_types:
          List of valid image types.
      valid_master_versions:
          List of valid master versions.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.ServerConfig)
  ))
_sym_db.RegisterMessage(ServerConfig)

CreateNodePoolRequest = _reflection.GeneratedProtocolMessageType('CreateNodePoolRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATENODEPOOLREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """CreateNodePoolRequest creates a node pool for a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number <h
          ttps://developers.google.com/console/help/new/#projectnumber>`
          __.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster.
      node_pool:
          The node pool to create.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.CreateNodePoolRequest)
  ))
_sym_db.RegisterMessage(CreateNodePoolRequest)

DeleteNodePoolRequest = _reflection.GeneratedProtocolMessageType('DeleteNodePoolRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETENODEPOOLREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """DeleteNodePoolRequest deletes a node pool for a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number <h
          ttps://developers.google.com/console/help/new/#projectnumber>`
          __.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster.
      node_pool_id:
          The name of the node pool to delete.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.DeleteNodePoolRequest)
  ))
_sym_db.RegisterMessage(DeleteNodePoolRequest)

ListNodePoolsRequest = _reflection.GeneratedProtocolMessageType('ListNodePoolsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTNODEPOOLSREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """ListNodePoolsRequest lists the node pool(s) for a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number <h
          ttps://developers.google.com/console/help/new/#projectnumber>`
          __.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.ListNodePoolsRequest)
  ))
_sym_db.RegisterMessage(ListNodePoolsRequest)

GetNodePoolRequest = _reflection.GeneratedProtocolMessageType('GetNodePoolRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETNODEPOOLREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """GetNodePoolRequest retrieves a node pool for a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number <h
          ttps://developers.google.com/console/help/new/#projectnumber>`
          __.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster.
      node_pool_id:
          The name of the node pool.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.GetNodePoolRequest)
  ))
_sym_db.RegisterMessage(GetNodePoolRequest)

NodePool = _reflection.GeneratedProtocolMessageType('NodePool', (_message.Message,), dict(
  DESCRIPTOR = _NODEPOOL,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """NodePool contains the name and configuration for a cluster's node pool.
  Node pools are a set of nodes (i.e. VM's), with a common configuration
  and specification, under the control of the cluster master. They may
  have a set of Kubernetes labels applied to them, which may be used to
  reference them during pod scheduling. They may also be resized up or
  down, to accommodate the workload.


  Attributes:
      name:
          The name of the node pool.
      config:
          The node configuration of the pool.
      initial_node_count:
          The initial node count for the pool. You must ensure that your
          Compute Engine resource quota is sufficient for this number of
          instances. You must also have available firewall and routes
          quota.
      self_link:
          [Output only] Server-defined URL for the resource.
      version:
          The version of the Kubernetes of this node.
      instance_group_urls:
          [Output only] The resource URLs of the `managed instance
          groups </compute/docs/instance-groups/creating-groups-of-
          managed-instances>`__ associated with this node pool.
      status:
          [Output only] The status of the nodes in this pool instance.
      status_message:
          [Output only] Additional information about the current status
          of this node pool instance, if available.
      autoscaling:
          Autoscaler configuration for this NodePool. Autoscaler is
          enabled only if a valid configuration is present.
      management:
          NodeManagement configuration for this NodePool.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.NodePool)
  ))
_sym_db.RegisterMessage(NodePool)

NodeManagement = _reflection.GeneratedProtocolMessageType('NodeManagement', (_message.Message,), dict(
  DESCRIPTOR = _NODEMANAGEMENT,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """NodeManagement defines the set of node management services turned on for
  the node pool.


  Attributes:
      auto_upgrade:
          A flag that specifies whether node auto-upgrade is enabled for
          the node pool. If enabled, node auto-upgrade helps keep the
          nodes in your node pool up to date with the latest release
          version of Kubernetes.
      auto_repair:
          A flag that specifies whether the node auto-repair is enabled
          for the node pool. If enabled, the nodes in this node pool
          will be monitored and, if they fail health checks too many
          times, an automatic repair action will be triggered.
      upgrade_options:
          Specifies the Auto Upgrade knobs for the node pool.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.NodeManagement)
  ))
_sym_db.RegisterMessage(NodeManagement)

AutoUpgradeOptions = _reflection.GeneratedProtocolMessageType('AutoUpgradeOptions', (_message.Message,), dict(
  DESCRIPTOR = _AUTOUPGRADEOPTIONS,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """AutoUpgradeOptions defines the set of options for the user to control
  how the Auto Upgrades will proceed.


  Attributes:
      auto_upgrade_start_time:
          [Output only] This field is set when upgrades are about to
          commence with the approximate start time for the upgrades, in
          `RFC3339 <https://www.ietf.org/rfc/rfc3339.txt>`__ text
          format.
      description:
          [Output only] This field is set when upgrades are about to
          commence with the description of the upgrade.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.AutoUpgradeOptions)
  ))
_sym_db.RegisterMessage(AutoUpgradeOptions)

MaintenancePolicy = _reflection.GeneratedProtocolMessageType('MaintenancePolicy', (_message.Message,), dict(
  DESCRIPTOR = _MAINTENANCEPOLICY,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """MaintenancePolicy defines the maintenance policy to be used for the
  cluster.


  Attributes:
      window:
          Specifies the maintenance window in which maintenance may be
          performed.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.MaintenancePolicy)
  ))
_sym_db.RegisterMessage(MaintenancePolicy)

MaintenanceWindow = _reflection.GeneratedProtocolMessageType('MaintenanceWindow', (_message.Message,), dict(
  DESCRIPTOR = _MAINTENANCEWINDOW,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """MaintenanceWindow defines the maintenance window to be used for the
  cluster.


  Attributes:
      daily_maintenance_window:
          DailyMaintenanceWindow specifies a daily maintenance operation
          window.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.MaintenanceWindow)
  ))
_sym_db.RegisterMessage(MaintenanceWindow)

DailyMaintenanceWindow = _reflection.GeneratedProtocolMessageType('DailyMaintenanceWindow', (_message.Message,), dict(
  DESCRIPTOR = _DAILYMAINTENANCEWINDOW,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """Time window specified for daily maintenance operations.


  Attributes:
      start_time:
          Time within the maintenance window to start the maintenance
          operations. Time format should be in `RFC3339
          <https://www.ietf.org/rfc/rfc3339.txt>`__ format "HH:MM”,
          where HH : [00-23] and MM : [00-59] GMT.
      duration:
          [Output only] Duration of the time window, automatically
          chosen to be smallest possible in the given scenario. Duration
          will be in `RFC3339 <https://www.ietf.org/rfc/rfc3339.txt>`__
          format "PTnHnMnS".
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.DailyMaintenanceWindow)
  ))
_sym_db.RegisterMessage(DailyMaintenanceWindow)

SetNodePoolManagementRequest = _reflection.GeneratedProtocolMessageType('SetNodePoolManagementRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETNODEPOOLMANAGEMENTREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """SetNodePoolManagementRequest sets the node management properties of a
  node pool.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to update.
      node_pool_id:
          The name of the node pool to update.
      management:
          NodeManagement configuration for the node pool.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.SetNodePoolManagementRequest)
  ))
_sym_db.RegisterMessage(SetNodePoolManagementRequest)

SetNodePoolSizeRequest = _reflection.GeneratedProtocolMessageType('SetNodePoolSizeRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETNODEPOOLSIZEREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """SetNodePoolSizeRequest sets the size a node pool.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to update.
      node_pool_id:
          The name of the node pool to update.
      node_count:
          The desired node count for the pool.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.SetNodePoolSizeRequest)
  ))
_sym_db.RegisterMessage(SetNodePoolSizeRequest)

RollbackNodePoolUpgradeRequest = _reflection.GeneratedProtocolMessageType('RollbackNodePoolUpgradeRequest', (_message.Message,), dict(
  DESCRIPTOR = _ROLLBACKNODEPOOLUPGRADEREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """RollbackNodePoolUpgradeRequest rollbacks the previously Aborted or
  Failed NodePool upgrade. This will be an no-op if the last upgrade
  successfully completed.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to rollback.
      node_pool_id:
          The name of the node pool to rollback.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.RollbackNodePoolUpgradeRequest)
  ))
_sym_db.RegisterMessage(RollbackNodePoolUpgradeRequest)

ListNodePoolsResponse = _reflection.GeneratedProtocolMessageType('ListNodePoolsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTNODEPOOLSRESPONSE,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """ListNodePoolsResponse is the result of ListNodePoolsRequest.


  Attributes:
      node_pools:
          A list of node pools for a cluster.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.ListNodePoolsResponse)
  ))
_sym_db.RegisterMessage(ListNodePoolsResponse)

NodePoolAutoscaling = _reflection.GeneratedProtocolMessageType('NodePoolAutoscaling', (_message.Message,), dict(
  DESCRIPTOR = _NODEPOOLAUTOSCALING,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """NodePoolAutoscaling contains information required by cluster autoscaler
  to adjust the size of the node pool to the current cluster usage.


  Attributes:
      enabled:
          Is autoscaling enabled for this node pool.
      min_node_count:
          Minimum number of nodes in the NodePool. Must be >= 1 and <=
          max\_node\_count.
      max_node_count:
          Maximum number of nodes in the NodePool. Must be >=
          min\_node\_count. There has to enough quota to scale up the
          cluster.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.NodePoolAutoscaling)
  ))
_sym_db.RegisterMessage(NodePoolAutoscaling)

SetLabelsRequest = _reflection.GeneratedProtocolMessageType('SetLabelsRequest', (_message.Message,), dict(

  ResourceLabelsEntry = _reflection.GeneratedProtocolMessageType('ResourceLabelsEntry', (_message.Message,), dict(
    DESCRIPTOR = _SETLABELSREQUEST_RESOURCELABELSENTRY,
    __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
    # @@protoc_insertion_point(class_scope:google.container.v1.SetLabelsRequest.ResourceLabelsEntry)
    ))
  ,
  DESCRIPTOR = _SETLABELSREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """SetLabelsRequest sets the Google Cloud Platform labels on a Google
  Container Engine cluster, which will in turn set them for Google Compute
  Engine resources used by that cluster


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number <h
          ttps://developers.google.com/console/help/new/#projectnumber>`
          __.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster.
      resource_labels:
          The labels to set for that cluster.
      label_fingerprint:
          The fingerprint of the previous set of labels for this
          resource, used to detect conflicts. The fingerprint is
          initially generated by Container Engine and changes after
          every request to modify or update labels. You must always
          provide an up-to-date fingerprint hash when updating or
          changing labels. Make a get() request to the resource to get
          the latest fingerprint.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.SetLabelsRequest)
  ))
_sym_db.RegisterMessage(SetLabelsRequest)
_sym_db.RegisterMessage(SetLabelsRequest.ResourceLabelsEntry)

SetLegacyAbacRequest = _reflection.GeneratedProtocolMessageType('SetLegacyAbacRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETLEGACYABACREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """SetLegacyAbacRequest enables or disables the ABAC authorization
  mechanism for a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to update.
      enabled:
          Whether ABAC authorization will be enabled in the cluster.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.SetLegacyAbacRequest)
  ))
_sym_db.RegisterMessage(SetLegacyAbacRequest)

StartIPRotationRequest = _reflection.GeneratedProtocolMessageType('StartIPRotationRequest', (_message.Message,), dict(
  DESCRIPTOR = _STARTIPROTATIONREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """StartIPRotationRequest creates a new IP for the cluster and then
  performs a node upgrade on each node pool to point to the new IP.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number <h
          ttps://developers.google.com/console/help/new/#projectnumber>`
          __.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.StartIPRotationRequest)
  ))
_sym_db.RegisterMessage(StartIPRotationRequest)

CompleteIPRotationRequest = _reflection.GeneratedProtocolMessageType('CompleteIPRotationRequest', (_message.Message,), dict(
  DESCRIPTOR = _COMPLETEIPROTATIONREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """CompleteIPRotationRequest moves the cluster master back into single-IP
  mode.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number <h
          ttps://developers.google.com/console/help/new/#projectnumber>`
          __.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.CompleteIPRotationRequest)
  ))
_sym_db.RegisterMessage(CompleteIPRotationRequest)

AcceleratorConfig = _reflection.GeneratedProtocolMessageType('AcceleratorConfig', (_message.Message,), dict(
  DESCRIPTOR = _ACCELERATORCONFIG,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """AcceleratorConfig represents a Hardware Accelerator request.


  Attributes:
      accelerator_count:
          The number of the accelerator cards exposed to an instance.
      accelerator_type:
          The accelerator type resource name. List of supported
          accelerators `here </compute/docs/gpus/#Introduction>`__
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.AcceleratorConfig)
  ))
_sym_db.RegisterMessage(AcceleratorConfig)

SetNetworkPolicyRequest = _reflection.GeneratedProtocolMessageType('SetNetworkPolicyRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETNETWORKPOLICYREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """SetNetworkPolicyRequest enables/disables network policy for a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number <h
          ttps://developers.google.com/console/help/new/#projectnumber>`
          __.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster.
      network_policy:
          Configuration options for the NetworkPolicy feature.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.SetNetworkPolicyRequest)
  ))
_sym_db.RegisterMessage(SetNetworkPolicyRequest)

SetMaintenancePolicyRequest = _reflection.GeneratedProtocolMessageType('SetMaintenancePolicyRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETMAINTENANCEPOLICYREQUEST,
  __module__ = 'google.cloud.container_v1.proto.cluster_service_pb2'
  ,
  __doc__ = """SetMaintenancePolicyRequest sets the maintenance policy for a cluster.


  Attributes:
      project_id:
          The Google Developers Console `project ID or project number
          <https://support.google.com/cloud/answer/6158840>`__.
      zone:
          The name of the Google Compute Engine `zone
          </compute/docs/zones#available>`__ in which the cluster
          resides.
      cluster_id:
          The name of the cluster to update.
      maintenance_policy:
          The maintenance policy to be set for the cluster. An empty
          field clears the existing maintenance policy.
  """,
  # @@protoc_insertion_point(class_scope:google.container.v1.SetMaintenancePolicyRequest)
  ))
_sym_db.RegisterMessage(SetMaintenancePolicyRequest)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\027com.google.container.v1B\023ClusterServiceProtoP\001Z<google.golang.org/genproto/googleapis/container/v1;container\252\002\031Google.Cloud.Container.V1\312\002\031Google\\Cloud\\Container\\V1'))
_NODECONFIG_METADATAENTRY.has_options = True
_NODECONFIG_METADATAENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_NODECONFIG_LABELSENTRY.has_options = True
_NODECONFIG_LABELSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CLUSTER_RESOURCELABELSENTRY.has_options = True
_CLUSTER_RESOURCELABELSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_SETLABELSREQUEST_RESOURCELABELSENTRY.has_options = True
_SETLABELSREQUEST_RESOURCELABELSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class ClusterManagerStub(object):
    """Google Container Engine Cluster Manager v1
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.ListClusters = channel.unary_unary(
          '/google.container.v1.ClusterManager/ListClusters',
          request_serializer=ListClustersRequest.SerializeToString,
          response_deserializer=ListClustersResponse.FromString,
          )
      self.GetCluster = channel.unary_unary(
          '/google.container.v1.ClusterManager/GetCluster',
          request_serializer=GetClusterRequest.SerializeToString,
          response_deserializer=Cluster.FromString,
          )
      self.CreateCluster = channel.unary_unary(
          '/google.container.v1.ClusterManager/CreateCluster',
          request_serializer=CreateClusterRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.UpdateCluster = channel.unary_unary(
          '/google.container.v1.ClusterManager/UpdateCluster',
          request_serializer=UpdateClusterRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.UpdateNodePool = channel.unary_unary(
          '/google.container.v1.ClusterManager/UpdateNodePool',
          request_serializer=UpdateNodePoolRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.SetNodePoolAutoscaling = channel.unary_unary(
          '/google.container.v1.ClusterManager/SetNodePoolAutoscaling',
          request_serializer=SetNodePoolAutoscalingRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.SetLoggingService = channel.unary_unary(
          '/google.container.v1.ClusterManager/SetLoggingService',
          request_serializer=SetLoggingServiceRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.SetMonitoringService = channel.unary_unary(
          '/google.container.v1.ClusterManager/SetMonitoringService',
          request_serializer=SetMonitoringServiceRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.SetAddonsConfig = channel.unary_unary(
          '/google.container.v1.ClusterManager/SetAddonsConfig',
          request_serializer=SetAddonsConfigRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.SetLocations = channel.unary_unary(
          '/google.container.v1.ClusterManager/SetLocations',
          request_serializer=SetLocationsRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.UpdateMaster = channel.unary_unary(
          '/google.container.v1.ClusterManager/UpdateMaster',
          request_serializer=UpdateMasterRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.SetMasterAuth = channel.unary_unary(
          '/google.container.v1.ClusterManager/SetMasterAuth',
          request_serializer=SetMasterAuthRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.DeleteCluster = channel.unary_unary(
          '/google.container.v1.ClusterManager/DeleteCluster',
          request_serializer=DeleteClusterRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.ListOperations = channel.unary_unary(
          '/google.container.v1.ClusterManager/ListOperations',
          request_serializer=ListOperationsRequest.SerializeToString,
          response_deserializer=ListOperationsResponse.FromString,
          )
      self.GetOperation = channel.unary_unary(
          '/google.container.v1.ClusterManager/GetOperation',
          request_serializer=GetOperationRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.CancelOperation = channel.unary_unary(
          '/google.container.v1.ClusterManager/CancelOperation',
          request_serializer=CancelOperationRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.GetServerConfig = channel.unary_unary(
          '/google.container.v1.ClusterManager/GetServerConfig',
          request_serializer=GetServerConfigRequest.SerializeToString,
          response_deserializer=ServerConfig.FromString,
          )
      self.ListNodePools = channel.unary_unary(
          '/google.container.v1.ClusterManager/ListNodePools',
          request_serializer=ListNodePoolsRequest.SerializeToString,
          response_deserializer=ListNodePoolsResponse.FromString,
          )
      self.GetNodePool = channel.unary_unary(
          '/google.container.v1.ClusterManager/GetNodePool',
          request_serializer=GetNodePoolRequest.SerializeToString,
          response_deserializer=NodePool.FromString,
          )
      self.CreateNodePool = channel.unary_unary(
          '/google.container.v1.ClusterManager/CreateNodePool',
          request_serializer=CreateNodePoolRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.DeleteNodePool = channel.unary_unary(
          '/google.container.v1.ClusterManager/DeleteNodePool',
          request_serializer=DeleteNodePoolRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.RollbackNodePoolUpgrade = channel.unary_unary(
          '/google.container.v1.ClusterManager/RollbackNodePoolUpgrade',
          request_serializer=RollbackNodePoolUpgradeRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.SetNodePoolManagement = channel.unary_unary(
          '/google.container.v1.ClusterManager/SetNodePoolManagement',
          request_serializer=SetNodePoolManagementRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.SetLabels = channel.unary_unary(
          '/google.container.v1.ClusterManager/SetLabels',
          request_serializer=SetLabelsRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.SetLegacyAbac = channel.unary_unary(
          '/google.container.v1.ClusterManager/SetLegacyAbac',
          request_serializer=SetLegacyAbacRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.StartIPRotation = channel.unary_unary(
          '/google.container.v1.ClusterManager/StartIPRotation',
          request_serializer=StartIPRotationRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.CompleteIPRotation = channel.unary_unary(
          '/google.container.v1.ClusterManager/CompleteIPRotation',
          request_serializer=CompleteIPRotationRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.SetNodePoolSize = channel.unary_unary(
          '/google.container.v1.ClusterManager/SetNodePoolSize',
          request_serializer=SetNodePoolSizeRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.SetNetworkPolicy = channel.unary_unary(
          '/google.container.v1.ClusterManager/SetNetworkPolicy',
          request_serializer=SetNetworkPolicyRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.SetMaintenancePolicy = channel.unary_unary(
          '/google.container.v1.ClusterManager/SetMaintenancePolicy',
          request_serializer=SetMaintenancePolicyRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )


  class ClusterManagerServicer(object):
    """Google Container Engine Cluster Manager v1
    """

    def ListClusters(self, request, context):
      """Lists all clusters owned by a project in either the specified zone or all
      zones.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetCluster(self, request, context):
      """Gets the details of a specific cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateCluster(self, request, context):
      """Creates a cluster, consisting of the specified number and type of Google
      Compute Engine instances.

      By default, the cluster is created in the project's
      [default network](/compute/docs/networks-and-firewalls#networks).

      One firewall is added for the cluster. After cluster creation,
      the cluster creates routes for each node to allow the containers
      on that node to communicate with all other instances in the
      cluster.

      Finally, an entry is added to the project's global metadata indicating
      which CIDR range is being used by the cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateCluster(self, request, context):
      """Updates the settings of a specific cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateNodePool(self, request, context):
      """Updates the version and/or image type of a specific node pool.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetNodePoolAutoscaling(self, request, context):
      """Sets the autoscaling settings of a specific node pool.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetLoggingService(self, request, context):
      """Sets the logging service of a specific cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetMonitoringService(self, request, context):
      """Sets the monitoring service of a specific cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetAddonsConfig(self, request, context):
      """Sets the addons of a specific cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetLocations(self, request, context):
      """Sets the locations of a specific cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateMaster(self, request, context):
      """Updates the master of a specific cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetMasterAuth(self, request, context):
      """Used to set master auth materials. Currently supports :-
      Changing the admin password of a specific cluster.
      This can be either via password generation or explicitly set the password.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteCluster(self, request, context):
      """Deletes the cluster, including the Kubernetes endpoint and all worker
      nodes.

      Firewalls and routes that were configured during cluster creation
      are also deleted.

      Other Google Compute Engine resources that might be in use by the cluster
      (e.g. load balancer resources) will not be deleted if they weren't present
      at the initial create time.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListOperations(self, request, context):
      """Lists all operations in a project in a specific zone or all zones.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetOperation(self, request, context):
      """Gets the specified operation.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CancelOperation(self, request, context):
      """Cancels the specified operation.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetServerConfig(self, request, context):
      """Returns configuration info about the Container Engine service.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListNodePools(self, request, context):
      """Lists the node pools for a cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetNodePool(self, request, context):
      """Retrieves the node pool requested.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateNodePool(self, request, context):
      """Creates a node pool for a cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteNodePool(self, request, context):
      """Deletes a node pool from a cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RollbackNodePoolUpgrade(self, request, context):
      """Roll back the previously Aborted or Failed NodePool upgrade.
      This will be an no-op if the last upgrade successfully completed.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetNodePoolManagement(self, request, context):
      """Sets the NodeManagement options for a node pool.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetLabels(self, request, context):
      """Sets labels on a cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetLegacyAbac(self, request, context):
      """Enables or disables the ABAC authorization mechanism on a cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def StartIPRotation(self, request, context):
      """Start master IP rotation.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CompleteIPRotation(self, request, context):
      """Completes master IP rotation.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetNodePoolSize(self, request, context):
      """Sets the size of a specific node pool.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetNetworkPolicy(self, request, context):
      """Enables/Disables Network Policy for a cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetMaintenancePolicy(self, request, context):
      """Sets the maintenance policy for a cluster.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ClusterManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'ListClusters': grpc.unary_unary_rpc_method_handler(
            servicer.ListClusters,
            request_deserializer=ListClustersRequest.FromString,
            response_serializer=ListClustersResponse.SerializeToString,
        ),
        'GetCluster': grpc.unary_unary_rpc_method_handler(
            servicer.GetCluster,
            request_deserializer=GetClusterRequest.FromString,
            response_serializer=Cluster.SerializeToString,
        ),
        'CreateCluster': grpc.unary_unary_rpc_method_handler(
            servicer.CreateCluster,
            request_deserializer=CreateClusterRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'UpdateCluster': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateCluster,
            request_deserializer=UpdateClusterRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'UpdateNodePool': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateNodePool,
            request_deserializer=UpdateNodePoolRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'SetNodePoolAutoscaling': grpc.unary_unary_rpc_method_handler(
            servicer.SetNodePoolAutoscaling,
            request_deserializer=SetNodePoolAutoscalingRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'SetLoggingService': grpc.unary_unary_rpc_method_handler(
            servicer.SetLoggingService,
            request_deserializer=SetLoggingServiceRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'SetMonitoringService': grpc.unary_unary_rpc_method_handler(
            servicer.SetMonitoringService,
            request_deserializer=SetMonitoringServiceRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'SetAddonsConfig': grpc.unary_unary_rpc_method_handler(
            servicer.SetAddonsConfig,
            request_deserializer=SetAddonsConfigRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'SetLocations': grpc.unary_unary_rpc_method_handler(
            servicer.SetLocations,
            request_deserializer=SetLocationsRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'UpdateMaster': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateMaster,
            request_deserializer=UpdateMasterRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'SetMasterAuth': grpc.unary_unary_rpc_method_handler(
            servicer.SetMasterAuth,
            request_deserializer=SetMasterAuthRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'DeleteCluster': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteCluster,
            request_deserializer=DeleteClusterRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'ListOperations': grpc.unary_unary_rpc_method_handler(
            servicer.ListOperations,
            request_deserializer=ListOperationsRequest.FromString,
            response_serializer=ListOperationsResponse.SerializeToString,
        ),
        'GetOperation': grpc.unary_unary_rpc_method_handler(
            servicer.GetOperation,
            request_deserializer=GetOperationRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'CancelOperation': grpc.unary_unary_rpc_method_handler(
            servicer.CancelOperation,
            request_deserializer=CancelOperationRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'GetServerConfig': grpc.unary_unary_rpc_method_handler(
            servicer.GetServerConfig,
            request_deserializer=GetServerConfigRequest.FromString,
            response_serializer=ServerConfig.SerializeToString,
        ),
        'ListNodePools': grpc.unary_unary_rpc_method_handler(
            servicer.ListNodePools,
            request_deserializer=ListNodePoolsRequest.FromString,
            response_serializer=ListNodePoolsResponse.SerializeToString,
        ),
        'GetNodePool': grpc.unary_unary_rpc_method_handler(
            servicer.GetNodePool,
            request_deserializer=GetNodePoolRequest.FromString,
            response_serializer=NodePool.SerializeToString,
        ),
        'CreateNodePool': grpc.unary_unary_rpc_method_handler(
            servicer.CreateNodePool,
            request_deserializer=CreateNodePoolRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'DeleteNodePool': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteNodePool,
            request_deserializer=DeleteNodePoolRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'RollbackNodePoolUpgrade': grpc.unary_unary_rpc_method_handler(
            servicer.RollbackNodePoolUpgrade,
            request_deserializer=RollbackNodePoolUpgradeRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'SetNodePoolManagement': grpc.unary_unary_rpc_method_handler(
            servicer.SetNodePoolManagement,
            request_deserializer=SetNodePoolManagementRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'SetLabels': grpc.unary_unary_rpc_method_handler(
            servicer.SetLabels,
            request_deserializer=SetLabelsRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'SetLegacyAbac': grpc.unary_unary_rpc_method_handler(
            servicer.SetLegacyAbac,
            request_deserializer=SetLegacyAbacRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'StartIPRotation': grpc.unary_unary_rpc_method_handler(
            servicer.StartIPRotation,
            request_deserializer=StartIPRotationRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'CompleteIPRotation': grpc.unary_unary_rpc_method_handler(
            servicer.CompleteIPRotation,
            request_deserializer=CompleteIPRotationRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'SetNodePoolSize': grpc.unary_unary_rpc_method_handler(
            servicer.SetNodePoolSize,
            request_deserializer=SetNodePoolSizeRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'SetNetworkPolicy': grpc.unary_unary_rpc_method_handler(
            servicer.SetNetworkPolicy,
            request_deserializer=SetNetworkPolicyRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'SetMaintenancePolicy': grpc.unary_unary_rpc_method_handler(
            servicer.SetMaintenancePolicy,
            request_deserializer=SetMaintenancePolicyRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'google.container.v1.ClusterManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaClusterManagerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """Google Container Engine Cluster Manager v1
    """
    def ListClusters(self, request, context):
      """Lists all clusters owned by a project in either the specified zone or all
      zones.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetCluster(self, request, context):
      """Gets the details of a specific cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateCluster(self, request, context):
      """Creates a cluster, consisting of the specified number and type of Google
      Compute Engine instances.

      By default, the cluster is created in the project's
      [default network](/compute/docs/networks-and-firewalls#networks).

      One firewall is added for the cluster. After cluster creation,
      the cluster creates routes for each node to allow the containers
      on that node to communicate with all other instances in the
      cluster.

      Finally, an entry is added to the project's global metadata indicating
      which CIDR range is being used by the cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateCluster(self, request, context):
      """Updates the settings of a specific cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateNodePool(self, request, context):
      """Updates the version and/or image type of a specific node pool.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetNodePoolAutoscaling(self, request, context):
      """Sets the autoscaling settings of a specific node pool.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetLoggingService(self, request, context):
      """Sets the logging service of a specific cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetMonitoringService(self, request, context):
      """Sets the monitoring service of a specific cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetAddonsConfig(self, request, context):
      """Sets the addons of a specific cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetLocations(self, request, context):
      """Sets the locations of a specific cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateMaster(self, request, context):
      """Updates the master of a specific cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetMasterAuth(self, request, context):
      """Used to set master auth materials. Currently supports :-
      Changing the admin password of a specific cluster.
      This can be either via password generation or explicitly set the password.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteCluster(self, request, context):
      """Deletes the cluster, including the Kubernetes endpoint and all worker
      nodes.

      Firewalls and routes that were configured during cluster creation
      are also deleted.

      Other Google Compute Engine resources that might be in use by the cluster
      (e.g. load balancer resources) will not be deleted if they weren't present
      at the initial create time.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListOperations(self, request, context):
      """Lists all operations in a project in a specific zone or all zones.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetOperation(self, request, context):
      """Gets the specified operation.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CancelOperation(self, request, context):
      """Cancels the specified operation.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetServerConfig(self, request, context):
      """Returns configuration info about the Container Engine service.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListNodePools(self, request, context):
      """Lists the node pools for a cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetNodePool(self, request, context):
      """Retrieves the node pool requested.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateNodePool(self, request, context):
      """Creates a node pool for a cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteNodePool(self, request, context):
      """Deletes a node pool from a cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RollbackNodePoolUpgrade(self, request, context):
      """Roll back the previously Aborted or Failed NodePool upgrade.
      This will be an no-op if the last upgrade successfully completed.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetNodePoolManagement(self, request, context):
      """Sets the NodeManagement options for a node pool.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetLabels(self, request, context):
      """Sets labels on a cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetLegacyAbac(self, request, context):
      """Enables or disables the ABAC authorization mechanism on a cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def StartIPRotation(self, request, context):
      """Start master IP rotation.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CompleteIPRotation(self, request, context):
      """Completes master IP rotation.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetNodePoolSize(self, request, context):
      """Sets the size of a specific node pool.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetNetworkPolicy(self, request, context):
      """Enables/Disables Network Policy for a cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetMaintenancePolicy(self, request, context):
      """Sets the maintenance policy for a cluster.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaClusterManagerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """Google Container Engine Cluster Manager v1
    """
    def ListClusters(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Lists all clusters owned by a project in either the specified zone or all
      zones.
      """
      raise NotImplementedError()
    ListClusters.future = None
    def GetCluster(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Gets the details of a specific cluster.
      """
      raise NotImplementedError()
    GetCluster.future = None
    def CreateCluster(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Creates a cluster, consisting of the specified number and type of Google
      Compute Engine instances.

      By default, the cluster is created in the project's
      [default network](/compute/docs/networks-and-firewalls#networks).

      One firewall is added for the cluster. After cluster creation,
      the cluster creates routes for each node to allow the containers
      on that node to communicate with all other instances in the
      cluster.

      Finally, an entry is added to the project's global metadata indicating
      which CIDR range is being used by the cluster.
      """
      raise NotImplementedError()
    CreateCluster.future = None
    def UpdateCluster(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Updates the settings of a specific cluster.
      """
      raise NotImplementedError()
    UpdateCluster.future = None
    def UpdateNodePool(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Updates the version and/or image type of a specific node pool.
      """
      raise NotImplementedError()
    UpdateNodePool.future = None
    def SetNodePoolAutoscaling(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sets the autoscaling settings of a specific node pool.
      """
      raise NotImplementedError()
    SetNodePoolAutoscaling.future = None
    def SetLoggingService(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sets the logging service of a specific cluster.
      """
      raise NotImplementedError()
    SetLoggingService.future = None
    def SetMonitoringService(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sets the monitoring service of a specific cluster.
      """
      raise NotImplementedError()
    SetMonitoringService.future = None
    def SetAddonsConfig(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sets the addons of a specific cluster.
      """
      raise NotImplementedError()
    SetAddonsConfig.future = None
    def SetLocations(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sets the locations of a specific cluster.
      """
      raise NotImplementedError()
    SetLocations.future = None
    def UpdateMaster(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Updates the master of a specific cluster.
      """
      raise NotImplementedError()
    UpdateMaster.future = None
    def SetMasterAuth(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Used to set master auth materials. Currently supports :-
      Changing the admin password of a specific cluster.
      This can be either via password generation or explicitly set the password.
      """
      raise NotImplementedError()
    SetMasterAuth.future = None
    def DeleteCluster(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Deletes the cluster, including the Kubernetes endpoint and all worker
      nodes.

      Firewalls and routes that were configured during cluster creation
      are also deleted.

      Other Google Compute Engine resources that might be in use by the cluster
      (e.g. load balancer resources) will not be deleted if they weren't present
      at the initial create time.
      """
      raise NotImplementedError()
    DeleteCluster.future = None
    def ListOperations(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Lists all operations in a project in a specific zone or all zones.
      """
      raise NotImplementedError()
    ListOperations.future = None
    def GetOperation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Gets the specified operation.
      """
      raise NotImplementedError()
    GetOperation.future = None
    def CancelOperation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Cancels the specified operation.
      """
      raise NotImplementedError()
    CancelOperation.future = None
    def GetServerConfig(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Returns configuration info about the Container Engine service.
      """
      raise NotImplementedError()
    GetServerConfig.future = None
    def ListNodePools(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Lists the node pools for a cluster.
      """
      raise NotImplementedError()
    ListNodePools.future = None
    def GetNodePool(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Retrieves the node pool requested.
      """
      raise NotImplementedError()
    GetNodePool.future = None
    def CreateNodePool(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Creates a node pool for a cluster.
      """
      raise NotImplementedError()
    CreateNodePool.future = None
    def DeleteNodePool(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Deletes a node pool from a cluster.
      """
      raise NotImplementedError()
    DeleteNodePool.future = None
    def RollbackNodePoolUpgrade(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Roll back the previously Aborted or Failed NodePool upgrade.
      This will be an no-op if the last upgrade successfully completed.
      """
      raise NotImplementedError()
    RollbackNodePoolUpgrade.future = None
    def SetNodePoolManagement(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sets the NodeManagement options for a node pool.
      """
      raise NotImplementedError()
    SetNodePoolManagement.future = None
    def SetLabels(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sets labels on a cluster.
      """
      raise NotImplementedError()
    SetLabels.future = None
    def SetLegacyAbac(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Enables or disables the ABAC authorization mechanism on a cluster.
      """
      raise NotImplementedError()
    SetLegacyAbac.future = None
    def StartIPRotation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Start master IP rotation.
      """
      raise NotImplementedError()
    StartIPRotation.future = None
    def CompleteIPRotation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Completes master IP rotation.
      """
      raise NotImplementedError()
    CompleteIPRotation.future = None
    def SetNodePoolSize(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sets the size of a specific node pool.
      """
      raise NotImplementedError()
    SetNodePoolSize.future = None
    def SetNetworkPolicy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Enables/Disables Network Policy for a cluster.
      """
      raise NotImplementedError()
    SetNetworkPolicy.future = None
    def SetMaintenancePolicy(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sets the maintenance policy for a cluster.
      """
      raise NotImplementedError()
    SetMaintenancePolicy.future = None


  def beta_create_ClusterManager_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('google.container.v1.ClusterManager', 'CancelOperation'): CancelOperationRequest.FromString,
      ('google.container.v1.ClusterManager', 'CompleteIPRotation'): CompleteIPRotationRequest.FromString,
      ('google.container.v1.ClusterManager', 'CreateCluster'): CreateClusterRequest.FromString,
      ('google.container.v1.ClusterManager', 'CreateNodePool'): CreateNodePoolRequest.FromString,
      ('google.container.v1.ClusterManager', 'DeleteCluster'): DeleteClusterRequest.FromString,
      ('google.container.v1.ClusterManager', 'DeleteNodePool'): DeleteNodePoolRequest.FromString,
      ('google.container.v1.ClusterManager', 'GetCluster'): GetClusterRequest.FromString,
      ('google.container.v1.ClusterManager', 'GetNodePool'): GetNodePoolRequest.FromString,
      ('google.container.v1.ClusterManager', 'GetOperation'): GetOperationRequest.FromString,
      ('google.container.v1.ClusterManager', 'GetServerConfig'): GetServerConfigRequest.FromString,
      ('google.container.v1.ClusterManager', 'ListClusters'): ListClustersRequest.FromString,
      ('google.container.v1.ClusterManager', 'ListNodePools'): ListNodePoolsRequest.FromString,
      ('google.container.v1.ClusterManager', 'ListOperations'): ListOperationsRequest.FromString,
      ('google.container.v1.ClusterManager', 'RollbackNodePoolUpgrade'): RollbackNodePoolUpgradeRequest.FromString,
      ('google.container.v1.ClusterManager', 'SetAddonsConfig'): SetAddonsConfigRequest.FromString,
      ('google.container.v1.ClusterManager', 'SetLabels'): SetLabelsRequest.FromString,
      ('google.container.v1.ClusterManager', 'SetLegacyAbac'): SetLegacyAbacRequest.FromString,
      ('google.container.v1.ClusterManager', 'SetLocations'): SetLocationsRequest.FromString,
      ('google.container.v1.ClusterManager', 'SetLoggingService'): SetLoggingServiceRequest.FromString,
      ('google.container.v1.ClusterManager', 'SetMaintenancePolicy'): SetMaintenancePolicyRequest.FromString,
      ('google.container.v1.ClusterManager', 'SetMasterAuth'): SetMasterAuthRequest.FromString,
      ('google.container.v1.ClusterManager', 'SetMonitoringService'): SetMonitoringServiceRequest.FromString,
      ('google.container.v1.ClusterManager', 'SetNetworkPolicy'): SetNetworkPolicyRequest.FromString,
      ('google.container.v1.ClusterManager', 'SetNodePoolAutoscaling'): SetNodePoolAutoscalingRequest.FromString,
      ('google.container.v1.ClusterManager', 'SetNodePoolManagement'): SetNodePoolManagementRequest.FromString,
      ('google.container.v1.ClusterManager', 'SetNodePoolSize'): SetNodePoolSizeRequest.FromString,
      ('google.container.v1.ClusterManager', 'StartIPRotation'): StartIPRotationRequest.FromString,
      ('google.container.v1.ClusterManager', 'UpdateCluster'): UpdateClusterRequest.FromString,
      ('google.container.v1.ClusterManager', 'UpdateMaster'): UpdateMasterRequest.FromString,
      ('google.container.v1.ClusterManager', 'UpdateNodePool'): UpdateNodePoolRequest.FromString,
    }
    response_serializers = {
      ('google.container.v1.ClusterManager', 'CancelOperation'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('google.container.v1.ClusterManager', 'CompleteIPRotation'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'CreateCluster'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'CreateNodePool'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'DeleteCluster'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'DeleteNodePool'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'GetCluster'): Cluster.SerializeToString,
      ('google.container.v1.ClusterManager', 'GetNodePool'): NodePool.SerializeToString,
      ('google.container.v1.ClusterManager', 'GetOperation'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'GetServerConfig'): ServerConfig.SerializeToString,
      ('google.container.v1.ClusterManager', 'ListClusters'): ListClustersResponse.SerializeToString,
      ('google.container.v1.ClusterManager', 'ListNodePools'): ListNodePoolsResponse.SerializeToString,
      ('google.container.v1.ClusterManager', 'ListOperations'): ListOperationsResponse.SerializeToString,
      ('google.container.v1.ClusterManager', 'RollbackNodePoolUpgrade'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetAddonsConfig'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetLabels'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetLegacyAbac'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetLocations'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetLoggingService'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetMaintenancePolicy'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetMasterAuth'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetMonitoringService'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetNetworkPolicy'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetNodePoolAutoscaling'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetNodePoolManagement'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetNodePoolSize'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'StartIPRotation'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'UpdateCluster'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'UpdateMaster'): Operation.SerializeToString,
      ('google.container.v1.ClusterManager', 'UpdateNodePool'): Operation.SerializeToString,
    }
    method_implementations = {
      ('google.container.v1.ClusterManager', 'CancelOperation'): face_utilities.unary_unary_inline(servicer.CancelOperation),
      ('google.container.v1.ClusterManager', 'CompleteIPRotation'): face_utilities.unary_unary_inline(servicer.CompleteIPRotation),
      ('google.container.v1.ClusterManager', 'CreateCluster'): face_utilities.unary_unary_inline(servicer.CreateCluster),
      ('google.container.v1.ClusterManager', 'CreateNodePool'): face_utilities.unary_unary_inline(servicer.CreateNodePool),
      ('google.container.v1.ClusterManager', 'DeleteCluster'): face_utilities.unary_unary_inline(servicer.DeleteCluster),
      ('google.container.v1.ClusterManager', 'DeleteNodePool'): face_utilities.unary_unary_inline(servicer.DeleteNodePool),
      ('google.container.v1.ClusterManager', 'GetCluster'): face_utilities.unary_unary_inline(servicer.GetCluster),
      ('google.container.v1.ClusterManager', 'GetNodePool'): face_utilities.unary_unary_inline(servicer.GetNodePool),
      ('google.container.v1.ClusterManager', 'GetOperation'): face_utilities.unary_unary_inline(servicer.GetOperation),
      ('google.container.v1.ClusterManager', 'GetServerConfig'): face_utilities.unary_unary_inline(servicer.GetServerConfig),
      ('google.container.v1.ClusterManager', 'ListClusters'): face_utilities.unary_unary_inline(servicer.ListClusters),
      ('google.container.v1.ClusterManager', 'ListNodePools'): face_utilities.unary_unary_inline(servicer.ListNodePools),
      ('google.container.v1.ClusterManager', 'ListOperations'): face_utilities.unary_unary_inline(servicer.ListOperations),
      ('google.container.v1.ClusterManager', 'RollbackNodePoolUpgrade'): face_utilities.unary_unary_inline(servicer.RollbackNodePoolUpgrade),
      ('google.container.v1.ClusterManager', 'SetAddonsConfig'): face_utilities.unary_unary_inline(servicer.SetAddonsConfig),
      ('google.container.v1.ClusterManager', 'SetLabels'): face_utilities.unary_unary_inline(servicer.SetLabels),
      ('google.container.v1.ClusterManager', 'SetLegacyAbac'): face_utilities.unary_unary_inline(servicer.SetLegacyAbac),
      ('google.container.v1.ClusterManager', 'SetLocations'): face_utilities.unary_unary_inline(servicer.SetLocations),
      ('google.container.v1.ClusterManager', 'SetLoggingService'): face_utilities.unary_unary_inline(servicer.SetLoggingService),
      ('google.container.v1.ClusterManager', 'SetMaintenancePolicy'): face_utilities.unary_unary_inline(servicer.SetMaintenancePolicy),
      ('google.container.v1.ClusterManager', 'SetMasterAuth'): face_utilities.unary_unary_inline(servicer.SetMasterAuth),
      ('google.container.v1.ClusterManager', 'SetMonitoringService'): face_utilities.unary_unary_inline(servicer.SetMonitoringService),
      ('google.container.v1.ClusterManager', 'SetNetworkPolicy'): face_utilities.unary_unary_inline(servicer.SetNetworkPolicy),
      ('google.container.v1.ClusterManager', 'SetNodePoolAutoscaling'): face_utilities.unary_unary_inline(servicer.SetNodePoolAutoscaling),
      ('google.container.v1.ClusterManager', 'SetNodePoolManagement'): face_utilities.unary_unary_inline(servicer.SetNodePoolManagement),
      ('google.container.v1.ClusterManager', 'SetNodePoolSize'): face_utilities.unary_unary_inline(servicer.SetNodePoolSize),
      ('google.container.v1.ClusterManager', 'StartIPRotation'): face_utilities.unary_unary_inline(servicer.StartIPRotation),
      ('google.container.v1.ClusterManager', 'UpdateCluster'): face_utilities.unary_unary_inline(servicer.UpdateCluster),
      ('google.container.v1.ClusterManager', 'UpdateMaster'): face_utilities.unary_unary_inline(servicer.UpdateMaster),
      ('google.container.v1.ClusterManager', 'UpdateNodePool'): face_utilities.unary_unary_inline(servicer.UpdateNodePool),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_ClusterManager_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('google.container.v1.ClusterManager', 'CancelOperation'): CancelOperationRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'CompleteIPRotation'): CompleteIPRotationRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'CreateCluster'): CreateClusterRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'CreateNodePool'): CreateNodePoolRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'DeleteCluster'): DeleteClusterRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'DeleteNodePool'): DeleteNodePoolRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'GetCluster'): GetClusterRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'GetNodePool'): GetNodePoolRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'GetOperation'): GetOperationRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'GetServerConfig'): GetServerConfigRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'ListClusters'): ListClustersRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'ListNodePools'): ListNodePoolsRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'ListOperations'): ListOperationsRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'RollbackNodePoolUpgrade'): RollbackNodePoolUpgradeRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetAddonsConfig'): SetAddonsConfigRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetLabels'): SetLabelsRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetLegacyAbac'): SetLegacyAbacRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetLocations'): SetLocationsRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetLoggingService'): SetLoggingServiceRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetMaintenancePolicy'): SetMaintenancePolicyRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetMasterAuth'): SetMasterAuthRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetMonitoringService'): SetMonitoringServiceRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetNetworkPolicy'): SetNetworkPolicyRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetNodePoolAutoscaling'): SetNodePoolAutoscalingRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetNodePoolManagement'): SetNodePoolManagementRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'SetNodePoolSize'): SetNodePoolSizeRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'StartIPRotation'): StartIPRotationRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'UpdateCluster'): UpdateClusterRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'UpdateMaster'): UpdateMasterRequest.SerializeToString,
      ('google.container.v1.ClusterManager', 'UpdateNodePool'): UpdateNodePoolRequest.SerializeToString,
    }
    response_deserializers = {
      ('google.container.v1.ClusterManager', 'CancelOperation'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('google.container.v1.ClusterManager', 'CompleteIPRotation'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'CreateCluster'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'CreateNodePool'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'DeleteCluster'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'DeleteNodePool'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'GetCluster'): Cluster.FromString,
      ('google.container.v1.ClusterManager', 'GetNodePool'): NodePool.FromString,
      ('google.container.v1.ClusterManager', 'GetOperation'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'GetServerConfig'): ServerConfig.FromString,
      ('google.container.v1.ClusterManager', 'ListClusters'): ListClustersResponse.FromString,
      ('google.container.v1.ClusterManager', 'ListNodePools'): ListNodePoolsResponse.FromString,
      ('google.container.v1.ClusterManager', 'ListOperations'): ListOperationsResponse.FromString,
      ('google.container.v1.ClusterManager', 'RollbackNodePoolUpgrade'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'SetAddonsConfig'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'SetLabels'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'SetLegacyAbac'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'SetLocations'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'SetLoggingService'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'SetMaintenancePolicy'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'SetMasterAuth'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'SetMonitoringService'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'SetNetworkPolicy'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'SetNodePoolAutoscaling'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'SetNodePoolManagement'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'SetNodePoolSize'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'StartIPRotation'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'UpdateCluster'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'UpdateMaster'): Operation.FromString,
      ('google.container.v1.ClusterManager', 'UpdateNodePool'): Operation.FromString,
    }
    cardinalities = {
      'CancelOperation': cardinality.Cardinality.UNARY_UNARY,
      'CompleteIPRotation': cardinality.Cardinality.UNARY_UNARY,
      'CreateCluster': cardinality.Cardinality.UNARY_UNARY,
      'CreateNodePool': cardinality.Cardinality.UNARY_UNARY,
      'DeleteCluster': cardinality.Cardinality.UNARY_UNARY,
      'DeleteNodePool': cardinality.Cardinality.UNARY_UNARY,
      'GetCluster': cardinality.Cardinality.UNARY_UNARY,
      'GetNodePool': cardinality.Cardinality.UNARY_UNARY,
      'GetOperation': cardinality.Cardinality.UNARY_UNARY,
      'GetServerConfig': cardinality.Cardinality.UNARY_UNARY,
      'ListClusters': cardinality.Cardinality.UNARY_UNARY,
      'ListNodePools': cardinality.Cardinality.UNARY_UNARY,
      'ListOperations': cardinality.Cardinality.UNARY_UNARY,
      'RollbackNodePoolUpgrade': cardinality.Cardinality.UNARY_UNARY,
      'SetAddonsConfig': cardinality.Cardinality.UNARY_UNARY,
      'SetLabels': cardinality.Cardinality.UNARY_UNARY,
      'SetLegacyAbac': cardinality.Cardinality.UNARY_UNARY,
      'SetLocations': cardinality.Cardinality.UNARY_UNARY,
      'SetLoggingService': cardinality.Cardinality.UNARY_UNARY,
      'SetMaintenancePolicy': cardinality.Cardinality.UNARY_UNARY,
      'SetMasterAuth': cardinality.Cardinality.UNARY_UNARY,
      'SetMonitoringService': cardinality.Cardinality.UNARY_UNARY,
      'SetNetworkPolicy': cardinality.Cardinality.UNARY_UNARY,
      'SetNodePoolAutoscaling': cardinality.Cardinality.UNARY_UNARY,
      'SetNodePoolManagement': cardinality.Cardinality.UNARY_UNARY,
      'SetNodePoolSize': cardinality.Cardinality.UNARY_UNARY,
      'StartIPRotation': cardinality.Cardinality.UNARY_UNARY,
      'UpdateCluster': cardinality.Cardinality.UNARY_UNARY,
      'UpdateMaster': cardinality.Cardinality.UNARY_UNARY,
      'UpdateNodePool': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'google.container.v1.ClusterManager', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
